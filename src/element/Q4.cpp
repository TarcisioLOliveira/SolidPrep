/*
 *   Copyright (C) 2022 Tarc√≠sio Ladeia de Oliveira.
 *
 *   This file is part of SolidPrep
 *
 *   SolidPrep is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   SolidPrep is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with SolidPrep.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

#include "element/Q4.hpp"
#include "cblas.h"
#include "logger.hpp"
#include <vector>
#include <lapacke.h>

namespace element{

Q4::Q4(ElementShape s):
    MeshElementCommon2DQuad<Q4>(s.nodes),
    coeffs(this->get_coeffs())
    {}

std::array<double, Q4::NODES_PER_ELEM*Q4::NODES_PER_ELEM> Q4::get_coeffs() const{
    constexpr size_t N = Q4::NODES_PER_ELEM;
    std::array<double, N> x, y;
    for(size_t i = 0; i < N; ++i){
        x[i] = this->nodes[i]->point.X();
        y[i] = this->nodes[i]->point.Y();
    }
    std::array<double, N*N> M = 
        {1, x[0], y[0], x[0]*y[0],
         1, x[1], y[1], x[1]*y[1],
         1, x[2], y[2], x[2]*y[2],
         1, x[3], y[3], x[3]*y[3]};

    std::array<int, N> ipiv;

    // M*C = I -> C=M^-1
    // C = {a[0], a[1], a[2], a[3],
    //      b[0], b[1], b[2], b[3],
    //      c[0], c[1], c[2], c[3],
    //      d[0], d[1], d[2], d[3]}
    int info = LAPACKE_dgetrf(LAPACK_COL_MAJOR, N, N, M.data(), N, ipiv.data());
    logger::log_assert(info == 0, logger::ERROR, "LAPACKE returned {} while calculating LU in Q4.", info);
    info = LAPACKE_dgetri(LAPACK_COL_MAJOR, N, M.data(), N, ipiv.data());
    logger::log_assert(info == 0, logger::ERROR, "LAPACKE returned {} while calculating computing inverse from LU in Q4.", info);

    return M;
}

std::vector<double> Q4::get_k(const std::vector<double>& D, const double t) const{
    constexpr size_t N = Q4::NODES_PER_ELEM;
    std::array<double, N> x, y;
    // Node ordering is important in this case, so we need to use the same
    // ordering that Gmsh uses, as it's the same one that is used for the
    // calculations too.
    //
    // Otherwise, the global matrix will have a ton of zeros.
    for(size_t i = 0; i < N; ++i){
        x[i] = this->nodes[i]->point.X();
        y[i] = this->nodes[i]->point.Y();
    }

    const double p = std::sqrt(3.0)/3.0;

    const auto k0 = this->get_k_base(D, t,  p,  p, x, y);
    const auto k1 = this->get_k_base(D, t,  p, -p, x, y);
    const auto k2 = this->get_k_base(D, t, -p, -p, x, y);
    const auto k3 = this->get_k_base(D, t, -p,  p, x, y);

    // Afterwards, we need to get the matrix into a sorted-by-id composition,
    // which can easily be node in a way analogous to how the global matrix
    // K is formed.
    std::vector<double> k(Q4::K_DIM*Q4::K_DIM);
    for(size_t i = 0; i < Q4::K_DIM*Q4::K_DIM; ++i){
        k[i] = k0[i]+k1[i]+k2[i]+k3[i];
    }

    return k;
}

std::vector<double> Q4::get_B(const gp_Pnt& point) const{
    // Getting coefficients
    const double * const a = this->coeffs.data();
    const double * const b = a + 4;
    const double * const c = b + 4;
    const double * const d = c + 4;

    const double x = point.X();
    const double y = point.Y();

    std::vector<double> B{
    b[0] + d[0]*y
    ,
    0
    ,
    b[1] + d[1]*y
    ,
    0
    ,
    b[2] + d[2]*y
    ,
    0
    ,
    b[3] + d[3]*y
    ,
    0
    ,
    0
    ,
    c[0] + d[0]*x
    ,
    0
    ,
    c[1] + d[1]*x
    ,
    0
    ,
    c[2] + d[2]*x
    ,
    0
    ,
    c[3] + d[3]*x
    ,
    c[0] + d[0]*x
    ,
    b[0] + d[0]*y
    ,
    c[1] + d[1]*x
    ,
    b[1] + d[1]*y
    ,
    c[2] + d[2]*x
    ,
    b[2] + d[2]*y
    ,
    c[3] + d[3]*x
    ,
    b[3] + d[3]*y
    };
    return B;
}

std::vector<double> Q4::get_DB(const std::vector<double>& D, const gp_Pnt& point) const{
    // Getting coefficients
    const double * const a = this->coeffs.data();
    const double * const b = a + 4;
    const double * const c = b + 4;
    const double * const d = c + 4;

    const double x = point.X();
    const double y = point.Y();

std::vector<double> DB{
D[0]*b[0] + D[0]*d[0]*y + D[2]*c[0] + D[2]*d[0]*x
,
D[1]*c[0] + D[1]*d[0]*x + D[2]*b[0] + D[2]*d[0]*y
,
D[0]*b[1] + D[0]*d[1]*y + D[2]*c[1] + D[2]*d[1]*x
,
D[1]*c[1] + D[1]*d[1]*x + D[2]*b[1] + D[2]*d[1]*y
,
D[0]*b[2] + D[0]*d[2]*y + D[2]*c[2] + D[2]*d[2]*x
,
D[1]*c[2] + D[1]*d[2]*x + D[2]*b[2] + D[2]*d[2]*y
,
D[0]*b[3] + D[0]*d[3]*y + D[2]*c[3] + D[2]*d[3]*x
,
D[1]*c[3] + D[1]*d[3]*x + D[2]*b[3] + D[2]*d[3]*y
,
D[3]*b[0] + D[3]*d[0]*y + D[5]*c[0] + D[5]*d[0]*x
,
D[4]*c[0] + D[4]*d[0]*x + D[5]*b[0] + D[5]*d[0]*y
,
D[3]*b[1] + D[3]*d[1]*y + D[5]*c[1] + D[5]*d[1]*x
,
D[4]*c[1] + D[4]*d[1]*x + D[5]*b[1] + D[5]*d[1]*y
,
D[3]*b[2] + D[3]*d[2]*y + D[5]*c[2] + D[5]*d[2]*x
,
D[4]*c[2] + D[4]*d[2]*x + D[5]*b[2] + D[5]*d[2]*y
,
D[3]*b[3] + D[3]*d[3]*y + D[5]*c[3] + D[5]*d[3]*x
,
D[4]*c[3] + D[4]*d[3]*x + D[5]*b[3] + D[5]*d[3]*y
,
D[6]*b[0] + D[6]*d[0]*y + D[8]*c[0] + D[8]*d[0]*x
,
D[7]*c[0] + D[7]*d[0]*x + D[8]*b[0] + D[8]*d[0]*y
,
D[6]*b[1] + D[6]*d[1]*y + D[8]*c[1] + D[8]*d[1]*x
,
D[7]*c[1] + D[7]*d[1]*x + D[8]*b[1] + D[8]*d[1]*y
,
D[6]*b[2] + D[6]*d[2]*y + D[8]*c[2] + D[8]*d[2]*x
,
D[7]*c[2] + D[7]*d[2]*x + D[8]*b[2] + D[8]*d[2]*y
,
D[6]*b[3] + D[6]*d[3]*y + D[8]*c[3] + D[8]*d[3]*x
,
D[7]*c[3] + D[7]*d[3]*x + D[8]*b[3] + D[8]*d[3]*y
};

    return DB;
}

std::vector<double> Q4::get_Nf(const double t, const std::vector<gp_Pnt>& points) const{
    // Getting coefficients
    const double * const a = this->coeffs.data();
    const double * const b = a + 4;
    const double * const c = b + 4;
    const double * const d = c + 4;

    const double x[]{points[0].X(), points[1].X()};
    const double y[]{points[0].Y(), points[1].Y()};

std::vector<double> Nf{
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[0] + 3*b[0]*x[0] + 3*b[0]*x[1] + 3*c[0]*y[0] + 3*c[0]*y[1] + 2*d[0]*x[0]*y[0] + d[0]*x[0]*y[1] + d[0]*x[1]*y[0] + 2*d[0]*x[1]*y[1])/6
,
0
,
0
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[0] + 3*b[0]*x[0] + 3*b[0]*x[1] + 3*c[0]*y[0] + 3*c[0]*y[1] + 2*d[0]*x[0]*y[0] + d[0]*x[0]*y[1] + d[0]*x[1]*y[0] + 2*d[0]*x[1]*y[1])/6
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[1] + 3*b[1]*x[0] + 3*b[1]*x[1] + 3*c[1]*y[0] + 3*c[1]*y[1] + 2*d[1]*x[0]*y[0] + d[1]*x[0]*y[1] + d[1]*x[1]*y[0] + 2*d[1]*x[1]*y[1])/6
,
0
,
0
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[1] + 3*b[1]*x[0] + 3*b[1]*x[1] + 3*c[1]*y[0] + 3*c[1]*y[1] + 2*d[1]*x[0]*y[0] + d[1]*x[0]*y[1] + d[1]*x[1]*y[0] + 2*d[1]*x[1]*y[1])/6
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[2] + 3*b[2]*x[0] + 3*b[2]*x[1] + 3*c[2]*y[0] + 3*c[2]*y[1] + 2*d[2]*x[0]*y[0] + d[2]*x[0]*y[1] + d[2]*x[1]*y[0] + 2*d[2]*x[1]*y[1])/6
,
0
,
0
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[2] + 3*b[2]*x[0] + 3*b[2]*x[1] + 3*c[2]*y[0] + 3*c[2]*y[1] + 2*d[2]*x[0]*y[0] + d[2]*x[0]*y[1] + d[2]*x[1]*y[0] + 2*d[2]*x[1]*y[1])/6
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[3] + 3*b[3]*x[0] + 3*b[3]*x[1] + 3*c[3]*y[0] + 3*c[3]*y[1] + 2*d[3]*x[0]*y[0] + d[3]*x[0]*y[1] + d[3]*x[1]*y[0] + 2*d[3]*x[1]*y[1])/6
,
0
,
0
,
t*std::sqrt(x[0]*x[0] - 2*x[0]*x[1] + x[1]*x[1] + y[0]*y[0] - 2*y[0]*y[1] + y[1]*y[1])*(6*a[3] + 3*b[3]*x[0] + 3*b[3]*x[1] + 3*c[3]*y[0] + 3*c[3]*y[1] + 2*d[3]*x[0]*y[0] + d[3]*x[0]*y[1] + d[3]*x[1]*y[0] + 2*d[3]*x[1]*y[1])/6
};

    return Nf;
}

std::vector<double> Q4::get_k_base(const std::vector<double>& D, const double t, const double xi, const double eta, const std::array<double, NODES_PER_ELEM>& x, const std::array<double, NODES_PER_ELEM>& y) const{

std::vector<double> k{
t*(-D[0]*y[1]*y[1] + 2*D[0]*y[1]*y[3] - D[0]*y[3]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] - D[2]*x[3]*y[1] + D[2]*x[3]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] - D[6]*x[3]*y[1] + D[6]*x[3]*y[3] - D[8]*x[1]*x[1] + 2*D[8]*x[1]*x[3] - D[8]*x[3]*x[3] + eta*eta*(-D[0]*y[1]*y[1] + 2*D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] - D[8]*x[1]*x[1] + 2*D[8]*x[1]*x[2] - D[8]*x[2]*x[2]) + eta*xi*(-2*D[0]*y[1]*y[2] + 2*D[0]*y[1]*y[3] + 2*D[0]*y[2]*y[2] - 2*D[0]*y[2]*y[3] + D[2]*x[1]*y[2] - D[2]*x[1]*y[3] + D[2]*x[2]*y[1] - 2*D[2]*x[2]*y[2] + D[2]*x[2]*y[3] - D[2]*x[3]*y[1] + D[2]*x[3]*y[2] + D[6]*x[1]*y[2] - D[6]*x[1]*y[3] + D[6]*x[2]*y[1] - 2*D[6]*x[2]*y[2] + D[6]*x[2]*y[3] - D[6]*x[3]*y[1] + D[6]*x[3]*y[2] - 2*D[8]*x[1]*x[2] + 2*D[8]*x[1]*x[3] + 2*D[8]*x[2]*x[2] - 2*D[8]*x[2]*x[3]) + eta*(2*D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[2] - 2*D[0]*y[1]*y[3] + 2*D[0]*y[2]*y[3] - 2*D[2]*x[1]*y[1] + D[2]*x[1]*y[2] + D[2]*x[1]*y[3] + D[2]*x[2]*y[1] - D[2]*x[2]*y[3] + D[2]*x[3]*y[1] - D[2]*x[3]*y[2] - 2*D[6]*x[1]*y[1] + D[6]*x[1]*y[2] + D[6]*x[1]*y[3] + D[6]*x[2]*y[1] - D[6]*x[2]*y[3] + D[6]*x[3]*y[1] - D[6]*x[3]*y[2] + 2*D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[2] - 2*D[8]*x[1]*x[3] + 2*D[8]*x[2]*x[3]) + xi*xi*(-D[0]*y[2]*y[2] + 2*D[0]*y[2]*y[3] - D[0]*y[3]*y[3] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] - D[2]*x[3]*y[2] + D[2]*x[3]*y[3] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] - D[6]*x[3]*y[2] + D[6]*x[3]*y[3] - D[8]*x[2]*x[2] + 2*D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) + xi*(2*D[0]*y[1]*y[2] - 2*D[0]*y[1]*y[3] - 2*D[0]*y[2]*y[3] + 2*D[0]*y[3]*y[3] - D[2]*x[1]*y[2] + D[2]*x[1]*y[3] - D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[2]*x[3]*y[1] + D[2]*x[3]*y[2] - 2*D[2]*x[3]*y[3] - D[6]*x[1]*y[2] + D[6]*x[1]*y[3] - D[6]*x[2]*y[1] + D[6]*x[2]*y[3] + D[6]*x[3]*y[1] + D[6]*x[3]*y[2] - 2*D[6]*x[3]*y[3] + 2*D[8]*x[1]*x[2] - 2*D[8]*x[1]*x[3] - 2*D[8]*x[2]*x[3] + 2*D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[1]*y[1] - D[1]*x[1]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] - D[2]*y[1]*y[1] + 2*D[2]*y[1]*y[3] - D[2]*y[3]*y[3] - D[7]*x[1]*x[1] + 2*D[7]*x[1]*x[3] - D[7]*x[3]*x[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3] + eta*eta*(D[1]*x[1]*y[1] - D[1]*x[1]*y[2] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] - D[2]*y[1]*y[1] + 2*D[2]*y[1]*y[2] - D[2]*y[2]*y[2] - D[7]*x[1]*x[1] + 2*D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2]) + eta*xi*(D[1]*x[1]*y[2] - D[1]*x[1]*y[3] + D[1]*x[2]*y[1] - 2*D[1]*x[2]*y[2] + D[1]*x[2]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[2] - 2*D[2]*y[1]*y[2] + 2*D[2]*y[1]*y[3] + 2*D[2]*y[2]*y[2] - 2*D[2]*y[2]*y[3] - 2*D[7]*x[1]*x[2] + 2*D[7]*x[1]*x[3] + 2*D[7]*x[2]*x[2] - 2*D[7]*x[2]*x[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3] + D[8]*x[2]*y[1] - 2*D[8]*x[2]*y[2] + D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) + eta*(-2*D[1]*x[1]*y[1] + D[1]*x[1]*y[2] + D[1]*x[1]*y[3] + D[1]*x[2]*y[1] - D[1]*x[2]*y[3] + D[1]*x[3]*y[1] - D[1]*x[3]*y[2] + 2*D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[2] - 2*D[2]*y[1]*y[3] + 2*D[2]*y[2]*y[3] + 2*D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[2] - 2*D[7]*x[1]*x[3] + 2*D[7]*x[2]*x[3] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[1]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) + xi*xi*(D[1]*x[2]*y[2] - D[1]*x[2]*y[3] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] - D[2]*y[2]*y[2] + 2*D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[2]*x[2] + 2*D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*(-D[1]*x[1]*y[2] + D[1]*x[1]*y[3] - D[1]*x[2]*y[1] + D[1]*x[2]*y[3] + D[1]*x[3]*y[1] + D[1]*x[3]*y[2] - 2*D[1]*x[3]*y[3] + 2*D[2]*y[1]*y[2] - 2*D[2]*y[1]*y[3] - 2*D[2]*y[2]*y[3] + 2*D[2]*y[3]*y[3] + 2*D[7]*x[1]*x[2] - 2*D[7]*x[1]*x[3] - 2*D[7]*x[2]*x[3] + 2*D[7]*x[3]*x[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[1] + D[8]*x[3]*y[2] - 2*D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[3] + D[2]*x[2]*y[1] - D[2]*x[2]*y[3] - D[6]*x[1]*y[0] + D[6]*x[1]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[2] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[2] + D[2]*x[3]*y[1] - D[2]*x[3]*y[2] - D[6]*x[1]*y[0] + D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[3]*y[3] + D[2]*x[0]*y[2] - D[2]*x[0]*y[3] + D[2]*x[2]*y[1] - D[2]*x[2]*y[2] - D[2]*x[3]*y[1] + D[2]*x[3]*y[3] + D[6]*x[1]*y[2] - D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] - D[6]*x[3]*y[0] + D[6]*x[3]*y[3] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[3]*x[3]) - eta*(2*D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[2] + D[0]*y[3]*y[3] - 2*D[2]*x[0]*y[1] + D[2]*x[0]*y[2] + D[2]*x[0]*y[3] + D[2]*x[2]*y[1] - D[2]*x[2]*y[2] + D[2]*x[3]*y[1] - D[2]*x[3]*y[3] - 2*D[6]*x[1]*y[0] + D[6]*x[1]*y[2] + D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] + 2*D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[2] + D[8]*x[3]*x[3]) + xi*xi*(D[0]*y[2]*y[2] - 2*D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[2]*y[2] + D[2]*x[2]*y[3] + D[2]*x[3]*y[2] - D[2]*x[3]*y[3] - D[6]*x[2]*y[2] + D[6]*x[2]*y[3] + D[6]*x[3]*y[2] - D[6]*x[3]*y[3] + D[8]*x[2]*x[2] - 2*D[8]*x[2]*x[3] + D[8]*x[3]*x[3]) - xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[3]*y[3] - D[2]*x[0]*y[2] + D[2]*x[0]*y[3] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] + D[2]*x[3]*y[1] - D[2]*x[3]*y[3] - D[6]*x[1]*y[2] + D[6]*x[1]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[3] + D[1]*x[2]*y[1] - D[1]*x[2]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2] + eta*eta*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[2] + D[1]*x[3]*y[1] - D[1]*x[3]*y[2] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3]) - eta*xi*(D[1]*x[0]*y[2] - D[1]*x[0]*y[3] + D[1]*x[2]*y[1] - D[1]*x[2]*y[2] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[3]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[3]*x[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) - eta*(-2*D[1]*x[0]*y[1] + D[1]*x[0]*y[2] + D[1]*x[0]*y[3] + D[1]*x[2]*y[1] - D[1]*x[2]*y[2] + D[1]*x[3]*y[1] - D[1]*x[3]*y[3] + 2*D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[2] + D[2]*y[3]*y[3] + 2*D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[2] + D[7]*x[3]*x[3] - 2*D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) + xi*xi*(-D[1]*x[2]*y[2] + D[1]*x[2]*y[3] + D[1]*x[3]*y[2] - D[1]*x[3]*y[3] + D[2]*y[2]*y[2] - 2*D[2]*y[2]*y[3] + D[2]*y[3]*y[3] + D[7]*x[2]*x[2] - 2*D[7]*x[2]*x[3] + D[7]*x[3]*x[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - xi*(-D[1]*x[0]*y[2] + D[1]*x[0]*y[3] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] + D[1]*x[3]*y[1] - D[1]*x[3]*y[3] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[3]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[3]*x[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[3] + D[0]*y[3]*y[3] - D[2]*x[1]*y[1] + D[2]*x[1]*y[3] + D[2]*x[3]*y[1] - D[2]*x[3]*y[3] - D[6]*x[1]*y[1] + D[6]*x[1]*y[3] + D[6]*x[3]*y[1] - D[6]*x[3]*y[3] + D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[3] + D[8]*x[3]*x[3] + eta*eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[2] - D[2]*x[3]*y[1] + D[2]*x[3]*y[2] + D[6]*x[1]*y[0] - D[6]*x[1]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[3] - D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[1] + 2*D[0]*y[0]*y[2] - D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] + D[2]*x[0]*y[1] - 2*D[2]*x[0]*y[2] + D[2]*x[0]*y[3] - D[2]*x[1]*y[1] + D[2]*x[1]*y[2] + D[2]*x[3]*y[2] - D[2]*x[3]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] - 2*D[6]*x[2]*y[0] + D[6]*x[2]*y[1] + D[6]*x[2]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] - D[8]*x[0]*x[1] + 2*D[8]*x[0]*x[2] - D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]) - eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[3] - D[2]*x[1]*y[1] + D[2]*x[1]*y[2] - D[2]*x[3]*y[2] + D[2]*x[3]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] + D[6]*x[2]*y[1] - D[6]*x[2]*y[3] - D[6]*x[3]*y[0] + D[6]*x[3]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) + xi*xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[2] + D[2]*x[0]*y[3] + D[2]*x[1]*y[2] - D[2]*x[1]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[1] + D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - xi*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] + D[2]*x[3]*y[2] - D[2]*x[3]*y[3] - D[6]*x[1]*y[0] + D[6]*x[1]*y[1] - D[6]*x[2]*y[1] + D[6]*x[2]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[1]*y[1] + D[1]*x[1]*y[3] + D[1]*x[3]*y[1] - D[1]*x[3]*y[3] + D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[3] + D[2]*y[3]*y[3] + D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[3] + D[7]*x[3]*x[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3] + eta*eta*(D[1]*x[0]*y[1] - D[1]*x[0]*y[2] - D[1]*x[3]*y[1] + D[1]*x[3]*y[2] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[3] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[3] - D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3]) - eta*xi*(D[1]*x[0]*y[1] - 2*D[1]*x[0]*y[2] + D[1]*x[0]*y[3] - D[1]*x[1]*y[1] + D[1]*x[1]*y[2] + D[1]*x[3]*y[2] - D[1]*x[3]*y[3] - D[2]*y[0]*y[1] + 2*D[2]*y[0]*y[2] - D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[2] - D[2]*y[2]*y[3] + D[2]*y[3]*y[3] - D[7]*x[0]*x[1] + 2*D[7]*x[0]*x[2] - D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[7]*x[3]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] - 2*D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*(D[1]*x[0]*y[1] - D[1]*x[0]*y[3] - D[1]*x[1]*y[1] + D[1]*x[1]*y[2] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) + xi*xi*(-D[1]*x[0]*y[2] + D[1]*x[0]*y[3] + D[1]*x[1]*y[2] - D[1]*x[1]*y[3] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - xi*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[3] + D[1]*x[1]*y[1] - D[1]*x[1]*y[2] + D[1]*x[3]*y[2] - D[1]*x[3]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] + D[2]*y[3]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[7]*x[3]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[3] - D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[2] - D[6]*x[3]*y[0] + D[6]*x[3]*y[2] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + eta*eta*(D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[2] + D[0]*y[2]*y[2] - D[2]*x[1]*y[1] + D[2]*x[1]*y[2] + D[2]*x[2]*y[1] - D[2]*x[2]*y[2] - D[6]*x[1]*y[1] + D[6]*x[1]*y[2] + D[6]*x[2]*y[1] - D[6]*x[2]*y[2] + D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[2] + D[8]*x[2]*x[2]) - eta*xi*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[1] + D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[2]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] - D[2]*x[2]*y[2] + D[2]*x[2]*y[3] - D[6]*x[1]*y[0] + D[6]*x[1]*y[1] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] - D[6]*x[3]*y[1] + D[6]*x[3]*y[2] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[1] + D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[2]*x[3]) - eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[1] - D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[2] - D[2]*x[1]*y[1] + D[2]*x[1]*y[3] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] - D[6]*x[2]*y[0] + D[6]*x[2]*y[2] + D[6]*x[3]*y[1] - D[6]*x[3]*y[2] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[1] - D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) + xi*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[2]*x[0]*y[2] - D[2]*x[0]*y[3] - D[2]*x[1]*y[2] + D[2]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[1] - D[6]*x[3]*y[0] + D[6]*x[3]*y[1] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3]) - xi*(-D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + 2*D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[2]*y[3] + D[2]*x[0]*y[1] + D[2]*x[0]*y[2] - 2*D[2]*x[0]*y[3] - D[2]*x[1]*y[1] + D[2]*x[1]*y[3] - D[2]*x[2]*y[2] + D[2]*x[2]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] - 2*D[6]*x[3]*y[0] + D[6]*x[3]*y[1] + D[6]*x[3]*y[2] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + 2*D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[2]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[0]*y[1] - D[1]*x[0]*y[3] - D[1]*x[2]*y[1] + D[1]*x[2]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2] + eta*eta*(-D[1]*x[1]*y[1] + D[1]*x[1]*y[2] + D[1]*x[2]*y[1] - D[1]*x[2]*y[2] + D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[2] + D[2]*y[2]*y[2] + D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[2] + D[7]*x[2]*x[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2]) - eta*xi*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[2] + D[1]*x[1]*y[1] - D[1]*x[1]*y[3] - D[1]*x[2]*y[2] + D[1]*x[2]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[1] + D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[1] + D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[2]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*(D[1]*x[0]*y[1] - D[1]*x[0]*y[2] - D[1]*x[1]*y[1] + D[1]*x[1]*y[3] + D[1]*x[2]*y[2] - D[1]*x[2]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[1] - D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[1] - D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) + xi*xi*(D[1]*x[0]*y[2] - D[1]*x[0]*y[3] - D[1]*x[1]*y[2] + D[1]*x[1]*y[3] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]) - xi*(D[1]*x[0]*y[1] + D[1]*x[0]*y[2] - 2*D[1]*x[0]*y[3] - D[1]*x[1]*y[1] + D[1]*x[1]*y[3] - D[1]*x[2]*y[2] + D[1]*x[2]*y[3] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + 2*D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + 2*D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - 2*D[8]*x[3]*y[0] + D[8]*x[3]*y[1] + D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[1]*y[1] - D[3]*x[1]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] - D[5]*x[1]*x[1] + 2*D[5]*x[1]*x[3] - D[5]*x[3]*x[3] - D[6]*y[1]*y[1] + 2*D[6]*y[1]*y[3] - D[6]*y[3]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3] + eta*eta*(D[3]*x[1]*y[1] - D[3]*x[1]*y[2] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] - D[5]*x[1]*x[1] + 2*D[5]*x[1]*x[2] - D[5]*x[2]*x[2] - D[6]*y[1]*y[1] + 2*D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2]) + eta*xi*(D[3]*x[1]*y[2] - D[3]*x[1]*y[3] + D[3]*x[2]*y[1] - 2*D[3]*x[2]*y[2] + D[3]*x[2]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[2] - 2*D[5]*x[1]*x[2] + 2*D[5]*x[1]*x[3] + 2*D[5]*x[2]*x[2] - 2*D[5]*x[2]*x[3] - 2*D[6]*y[1]*y[2] + 2*D[6]*y[1]*y[3] + 2*D[6]*y[2]*y[2] - 2*D[6]*y[2]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3] + D[8]*x[2]*y[1] - 2*D[8]*x[2]*y[2] + D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) + eta*(-2*D[3]*x[1]*y[1] + D[3]*x[1]*y[2] + D[3]*x[1]*y[3] + D[3]*x[2]*y[1] - D[3]*x[2]*y[3] + D[3]*x[3]*y[1] - D[3]*x[3]*y[2] + 2*D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[2] - 2*D[5]*x[1]*x[3] + 2*D[5]*x[2]*x[3] + 2*D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[2] - 2*D[6]*y[1]*y[3] + 2*D[6]*y[2]*y[3] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[1]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) + xi*xi*(D[3]*x[2]*y[2] - D[3]*x[2]*y[3] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] - D[5]*x[2]*x[2] + 2*D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[2]*y[2] + 2*D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*(-D[3]*x[1]*y[2] + D[3]*x[1]*y[3] - D[3]*x[2]*y[1] + D[3]*x[2]*y[3] + D[3]*x[3]*y[1] + D[3]*x[3]*y[2] - 2*D[3]*x[3]*y[3] + 2*D[5]*x[1]*x[2] - 2*D[5]*x[1]*x[3] - 2*D[5]*x[2]*x[3] + 2*D[5]*x[3]*x[3] + 2*D[6]*y[1]*y[2] - 2*D[6]*y[1]*y[3] - 2*D[6]*y[2]*y[3] + 2*D[6]*y[3]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[1] + D[8]*x[3]*y[2] - 2*D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[1]*x[1] + 2*D[4]*x[1]*x[3] - D[4]*x[3]*x[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] - D[5]*x[3]*y[1] + D[5]*x[3]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] - D[7]*x[3]*y[1] + D[7]*x[3]*y[3] - D[8]*y[1]*y[1] + 2*D[8]*y[1]*y[3] - D[8]*y[3]*y[3] + eta*eta*(-D[4]*x[1]*x[1] + 2*D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] - D[8]*y[1]*y[1] + 2*D[8]*y[1]*y[2] - D[8]*y[2]*y[2]) + eta*xi*(-2*D[4]*x[1]*x[2] + 2*D[4]*x[1]*x[3] + 2*D[4]*x[2]*x[2] - 2*D[4]*x[2]*x[3] + D[5]*x[1]*y[2] - D[5]*x[1]*y[3] + D[5]*x[2]*y[1] - 2*D[5]*x[2]*y[2] + D[5]*x[2]*y[3] - D[5]*x[3]*y[1] + D[5]*x[3]*y[2] + D[7]*x[1]*y[2] - D[7]*x[1]*y[3] + D[7]*x[2]*y[1] - 2*D[7]*x[2]*y[2] + D[7]*x[2]*y[3] - D[7]*x[3]*y[1] + D[7]*x[3]*y[2] - 2*D[8]*y[1]*y[2] + 2*D[8]*y[1]*y[3] + 2*D[8]*y[2]*y[2] - 2*D[8]*y[2]*y[3]) + eta*(2*D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[2] - 2*D[4]*x[1]*x[3] + 2*D[4]*x[2]*x[3] - 2*D[5]*x[1]*y[1] + D[5]*x[1]*y[2] + D[5]*x[1]*y[3] + D[5]*x[2]*y[1] - D[5]*x[2]*y[3] + D[5]*x[3]*y[1] - D[5]*x[3]*y[2] - 2*D[7]*x[1]*y[1] + D[7]*x[1]*y[2] + D[7]*x[1]*y[3] + D[7]*x[2]*y[1] - D[7]*x[2]*y[3] + D[7]*x[3]*y[1] - D[7]*x[3]*y[2] + 2*D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[2] - 2*D[8]*y[1]*y[3] + 2*D[8]*y[2]*y[3]) + xi*xi*(-D[4]*x[2]*x[2] + 2*D[4]*x[2]*x[3] - D[4]*x[3]*x[3] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] - D[5]*x[3]*y[2] + D[5]*x[3]*y[3] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] - D[7]*x[3]*y[2] + D[7]*x[3]*y[3] - D[8]*y[2]*y[2] + 2*D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) + xi*(2*D[4]*x[1]*x[2] - 2*D[4]*x[1]*x[3] - 2*D[4]*x[2]*x[3] + 2*D[4]*x[3]*x[3] - D[5]*x[1]*y[2] + D[5]*x[1]*y[3] - D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[5]*x[3]*y[1] + D[5]*x[3]*y[2] - 2*D[5]*x[3]*y[3] - D[7]*x[1]*y[2] + D[7]*x[1]*y[3] - D[7]*x[2]*y[1] + D[7]*x[2]*y[3] + D[7]*x[3]*y[1] + D[7]*x[3]*y[2] - 2*D[7]*x[3]*y[3] + 2*D[8]*y[1]*y[2] - 2*D[8]*y[1]*y[3] - 2*D[8]*y[2]*y[3] + 2*D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[2] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + eta*eta*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*xi*(D[3]*x[1]*y[2] - D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] - D[3]*x[3]*y[0] + D[3]*x[3]*y[3] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[3]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[3]*y[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) - eta*(-2*D[3]*x[1]*y[0] + D[3]*x[1]*y[2] + D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] + 2*D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[2] + D[5]*x[3]*x[3] + 2*D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[2] + D[6]*y[3]*y[3] - 2*D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3]) + xi*xi*(-D[3]*x[2]*y[2] + D[3]*x[2]*y[3] + D[3]*x[3]*y[2] - D[3]*x[3]*y[3] + D[5]*x[2]*x[2] - 2*D[5]*x[2]*x[3] + D[5]*x[3]*x[3] + D[6]*y[2]*y[2] - 2*D[6]*y[2]*y[3] + D[6]*y[3]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - xi*(-D[3]*x[1]*y[2] + D[3]*x[1]*y[3] - D[3]*x[2]*y[0] + D[3]*x[2]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[3]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[3]*y[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[2] - D[7]*x[0]*y[1] + D[7]*x[0]*y[3] + D[7]*x[2]*y[1] - D[7]*x[2]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[3] - D[7]*x[0]*y[1] + D[7]*x[0]*y[2] + D[7]*x[3]*y[1] - D[7]*x[3]*y[2] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[3]*x[3] + D[5]*x[1]*y[2] - D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] - D[5]*x[3]*y[0] + D[5]*x[3]*y[3] + D[7]*x[0]*y[2] - D[7]*x[0]*y[3] + D[7]*x[2]*y[1] - D[7]*x[2]*y[2] - D[7]*x[3]*y[1] + D[7]*x[3]*y[3] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[3]*y[3]) - eta*(2*D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[2] + D[4]*x[3]*x[3] - 2*D[5]*x[1]*y[0] + D[5]*x[1]*y[2] + D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] - 2*D[7]*x[0]*y[1] + D[7]*x[0]*y[2] + D[7]*x[0]*y[3] + D[7]*x[2]*y[1] - D[7]*x[2]*y[2] + D[7]*x[3]*y[1] - D[7]*x[3]*y[3] + 2*D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[2] + D[8]*y[3]*y[3]) + xi*xi*(D[4]*x[2]*x[2] - 2*D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[2]*y[2] + D[5]*x[2]*y[3] + D[5]*x[3]*y[2] - D[5]*x[3]*y[3] - D[7]*x[2]*y[2] + D[7]*x[2]*y[3] + D[7]*x[3]*y[2] - D[7]*x[3]*y[3] + D[8]*y[2]*y[2] - 2*D[8]*y[2]*y[3] + D[8]*y[3]*y[3]) - xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[3]*x[3] - D[5]*x[1]*y[2] + D[5]*x[1]*y[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] - D[7]*x[0]*y[2] + D[7]*x[0]*y[3] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] + D[7]*x[3]*y[1] - D[7]*x[3]*y[3] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[1]*y[1] + D[3]*x[1]*y[3] + D[3]*x[3]*y[1] - D[3]*x[3]*y[3] + D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[3] + D[5]*x[3]*x[3] + D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[3] + D[6]*y[3]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3] + eta*eta*(D[3]*x[1]*y[0] - D[3]*x[1]*y[3] - D[3]*x[2]*y[0] + D[3]*x[2]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[3] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[3] - D[6]*y[2]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*xi*(D[3]*x[1]*y[0] - D[3]*x[1]*y[1] - 2*D[3]*x[2]*y[0] + D[3]*x[2]*y[1] + D[3]*x[2]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] - D[5]*x[0]*x[1] + 2*D[5]*x[0]*x[2] - D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[2] - D[5]*x[2]*x[3] + D[5]*x[3]*x[3] - D[6]*y[0]*y[1] + 2*D[6]*y[0]*y[2] - D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[6]*y[3]*y[3] + D[8]*x[0]*y[1] - 2*D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - eta*(D[3]*x[1]*y[0] - D[3]*x[1]*y[1] + D[3]*x[2]*y[1] - D[3]*x[2]*y[3] - D[3]*x[3]*y[0] + D[3]*x[3]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*xi*(-D[3]*x[2]*y[0] + D[3]*x[2]*y[1] + D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3]) - xi*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[1] - D[3]*x[2]*y[1] + D[3]*x[2]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] + D[5]*x[3]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[6]*y[3]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[3] + D[4]*x[3]*x[3] - D[5]*x[1]*y[1] + D[5]*x[1]*y[3] + D[5]*x[3]*y[1] - D[5]*x[3]*y[3] - D[7]*x[1]*y[1] + D[7]*x[1]*y[3] + D[7]*x[3]*y[1] - D[7]*x[3]*y[3] + D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[3] + D[8]*y[3]*y[3] + eta*eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[3] + D[7]*x[0]*y[1] - D[7]*x[0]*y[2] - D[7]*x[3]*y[1] + D[7]*x[3]*y[2] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[3] - D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[1] + 2*D[4]*x[0]*x[2] - D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] - 2*D[5]*x[2]*y[0] + D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] + D[7]*x[0]*y[1] - 2*D[7]*x[0]*y[2] + D[7]*x[0]*y[3] - D[7]*x[1]*y[1] + D[7]*x[1]*y[2] + D[7]*x[3]*y[2] - D[7]*x[3]*y[3] - D[8]*y[0]*y[1] + 2*D[8]*y[0]*y[2] - D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]) - eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] + D[5]*x[2]*y[1] - D[5]*x[2]*y[3] - D[5]*x[3]*y[0] + D[5]*x[3]*y[3] + D[7]*x[0]*y[1] - D[7]*x[0]*y[3] - D[7]*x[1]*y[1] + D[7]*x[1]*y[2] - D[7]*x[3]*y[2] + D[7]*x[3]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) + xi*xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[1] + D[5]*x[3]*y[0] - D[5]*x[3]*y[1] - D[7]*x[0]*y[2] + D[7]*x[0]*y[3] + D[7]*x[1]*y[2] - D[7]*x[1]*y[3] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - xi*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[1] - D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] - D[7]*x[0]*y[1] + D[7]*x[0]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] + D[7]*x[3]*y[2] - D[7]*x[3]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[1]*y[0] - D[3]*x[1]*y[2] - D[3]*x[3]*y[0] + D[3]*x[3]*y[2] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + eta*eta*(-D[3]*x[1]*y[1] + D[3]*x[1]*y[2] + D[3]*x[2]*y[1] - D[3]*x[2]*y[2] + D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[2] + D[5]*x[2]*x[2] + D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[2] + D[6]*y[2]*y[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2]) - eta*xi*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[1] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] - D[3]*x[3]*y[1] + D[3]*x[3]*y[2] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[1] + D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[1] + D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[2]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3]) - eta*(D[3]*x[1]*y[0] - D[3]*x[1]*y[1] - D[3]*x[2]*y[0] + D[3]*x[2]*y[2] + D[3]*x[3]*y[1] - D[3]*x[3]*y[2] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[1] - D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[1] - D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) + xi*xi*(D[3]*x[2]*y[0] - D[3]*x[2]*y[1] - D[3]*x[3]*y[0] + D[3]*x[3]*y[1] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3]) - xi*(D[3]*x[1]*y[0] - D[3]*x[1]*y[1] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] - 2*D[3]*x[3]*y[0] + D[3]*x[3]*y[1] + D[3]*x[3]*y[2] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + 2*D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + 2*D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[2]*y[3] + D[8]*x[0]*y[1] + D[8]*x[0]*y[2] - 2*D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[2] - D[5]*x[3]*y[0] + D[5]*x[3]*y[2] + D[7]*x[0]*y[1] - D[7]*x[0]*y[3] - D[7]*x[2]*y[1] + D[7]*x[2]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + eta*eta*(D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[2] + D[4]*x[2]*x[2] - D[5]*x[1]*y[1] + D[5]*x[1]*y[2] + D[5]*x[2]*y[1] - D[5]*x[2]*y[2] - D[7]*x[1]*y[1] + D[7]*x[1]*y[2] + D[7]*x[2]*y[1] - D[7]*x[2]*y[2] + D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[2] + D[8]*y[2]*y[2]) - eta*xi*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[1] + D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[2]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[1] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] - D[5]*x[3]*y[1] + D[5]*x[3]*y[2] - D[7]*x[0]*y[1] + D[7]*x[0]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] - D[7]*x[2]*y[2] + D[7]*x[2]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[1] + D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[2]*y[3]) - eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[1] - D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] - D[5]*x[2]*y[0] + D[5]*x[2]*y[2] + D[5]*x[3]*y[1] - D[5]*x[3]*y[2] + D[7]*x[0]*y[1] - D[7]*x[0]*y[2] - D[7]*x[1]*y[1] + D[7]*x[1]*y[3] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[1] - D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) + xi*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[1] - D[5]*x[3]*y[0] + D[5]*x[3]*y[1] + D[7]*x[0]*y[2] - D[7]*x[0]*y[3] - D[7]*x[1]*y[2] + D[7]*x[1]*y[3] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3]) - xi*(-D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + 2*D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] - 2*D[5]*x[3]*y[0] + D[5]*x[3]*y[1] + D[5]*x[3]*y[2] + D[7]*x[0]*y[1] + D[7]*x[0]*y[2] - 2*D[7]*x[0]*y[3] - D[7]*x[1]*y[1] + D[7]*x[1]*y[3] - D[7]*x[2]*y[2] + D[7]*x[2]*y[3] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + 2*D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[2] - D[6]*x[0]*y[1] + D[6]*x[0]*y[3] + D[6]*x[2]*y[1] - D[6]*x[2]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[3] - D[6]*x[0]*y[1] + D[6]*x[0]*y[2] + D[6]*x[3]*y[1] - D[6]*x[3]*y[2] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[3]*y[3] + D[2]*x[1]*y[2] - D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] - D[2]*x[3]*y[0] + D[2]*x[3]*y[3] + D[6]*x[0]*y[2] - D[6]*x[0]*y[3] + D[6]*x[2]*y[1] - D[6]*x[2]*y[2] - D[6]*x[3]*y[1] + D[6]*x[3]*y[3] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[3]*x[3]) - eta*(2*D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[2] + D[0]*y[3]*y[3] - 2*D[2]*x[1]*y[0] + D[2]*x[1]*y[2] + D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] - 2*D[6]*x[0]*y[1] + D[6]*x[0]*y[2] + D[6]*x[0]*y[3] + D[6]*x[2]*y[1] - D[6]*x[2]*y[2] + D[6]*x[3]*y[1] - D[6]*x[3]*y[3] + 2*D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[2] + D[8]*x[3]*x[3]) + xi*xi*(D[0]*y[2]*y[2] - 2*D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[2]*y[2] + D[2]*x[2]*y[3] + D[2]*x[3]*y[2] - D[2]*x[3]*y[3] - D[6]*x[2]*y[2] + D[6]*x[2]*y[3] + D[6]*x[3]*y[2] - D[6]*x[3]*y[3] + D[8]*x[2]*x[2] - 2*D[8]*x[2]*x[3] + D[8]*x[3]*x[3]) - xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[3]*y[3] - D[2]*x[1]*y[2] + D[2]*x[1]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] - D[6]*x[0]*y[2] + D[6]*x[0]*y[3] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] + D[6]*x[3]*y[1] - D[6]*x[3]*y[3] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[2] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + eta*eta*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*xi*(D[1]*x[1]*y[2] - D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] - D[1]*x[3]*y[0] + D[1]*x[3]*y[3] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[3]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[3]*x[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) - eta*(-2*D[1]*x[1]*y[0] + D[1]*x[1]*y[2] + D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] + 2*D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[2] + D[2]*y[3]*y[3] + 2*D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[2] + D[7]*x[3]*x[3] - 2*D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3]) + xi*xi*(-D[1]*x[2]*y[2] + D[1]*x[2]*y[3] + D[1]*x[3]*y[2] - D[1]*x[3]*y[3] + D[2]*y[2]*y[2] - 2*D[2]*y[2]*y[3] + D[2]*y[3]*y[3] + D[7]*x[2]*x[2] - 2*D[7]*x[2]*x[3] + D[7]*x[3]*x[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - xi*(-D[1]*x[1]*y[2] + D[1]*x[1]*y[3] - D[1]*x[2]*y[0] + D[1]*x[2]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[3]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[3]*x[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[2] - D[0]*y[2]*y[2] + D[2]*x[0]*y[0] - D[2]*x[0]*y[2] - D[2]*x[2]*y[0] + D[2]*x[2]*y[2] + D[6]*x[0]*y[0] - D[6]*x[0]*y[2] - D[6]*x[2]*y[0] + D[6]*x[2]*y[2] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[2] - D[8]*x[2]*x[2] + eta*eta*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[3] - D[0]*y[3]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[3] - D[2]*x[3]*y[0] + D[2]*x[3]*y[3] + D[6]*x[0]*y[0] - D[6]*x[0]*y[3] - D[6]*x[3]*y[0] + D[6]*x[3]*y[3] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[3] - D[8]*x[3]*x[3]) - eta*xi*(2*D[0]*y[0]*y[2] - 2*D[0]*y[0]*y[3] - 2*D[0]*y[2]*y[3] + 2*D[0]*y[3]*y[3] - D[2]*x[0]*y[2] + D[2]*x[0]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[3] + D[2]*x[3]*y[0] + D[2]*x[3]*y[2] - 2*D[2]*x[3]*y[3] - D[6]*x[0]*y[2] + D[6]*x[0]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[3] + D[6]*x[3]*y[0] + D[6]*x[3]*y[2] - 2*D[6]*x[3]*y[3] + 2*D[8]*x[0]*x[2] - 2*D[8]*x[0]*x[3] - 2*D[8]*x[2]*x[3] + 2*D[8]*x[3]*x[3]) + eta*(2*D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[2] - 2*D[0]*y[0]*y[3] + 2*D[0]*y[2]*y[3] - 2*D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[0]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[2] - 2*D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[0]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[2] + 2*D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[2] - 2*D[8]*x[0]*x[3] + 2*D[8]*x[2]*x[3]) + xi*xi*(-D[0]*y[2]*y[2] + 2*D[0]*y[2]*y[3] - D[0]*y[3]*y[3] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] - D[2]*x[3]*y[2] + D[2]*x[3]*y[3] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] - D[6]*x[3]*y[2] + D[6]*x[3]*y[3] - D[8]*x[2]*x[2] + 2*D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) - xi*(-2*D[0]*y[0]*y[2] + 2*D[0]*y[0]*y[3] + 2*D[0]*y[2]*y[2] - 2*D[0]*y[2]*y[3] + D[2]*x[0]*y[2] - D[2]*x[0]*y[3] + D[2]*x[2]*y[0] - 2*D[2]*x[2]*y[2] + D[2]*x[2]*y[3] - D[2]*x[3]*y[0] + D[2]*x[3]*y[2] + D[6]*x[0]*y[2] - D[6]*x[0]*y[3] + D[6]*x[2]*y[0] - 2*D[6]*x[2]*y[2] + D[6]*x[2]*y[3] - D[6]*x[3]*y[0] + D[6]*x[3]*y[2] - 2*D[8]*x[0]*x[2] + 2*D[8]*x[0]*x[3] + 2*D[8]*x[2]*x[2] - 2*D[8]*x[2]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[0]*y[0] - D[1]*x[0]*y[2] - D[1]*x[2]*y[0] + D[1]*x[2]*y[2] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[2] - D[2]*y[2]*y[2] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[2] - D[7]*x[2]*x[2] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + eta*eta*(D[1]*x[0]*y[0] - D[1]*x[0]*y[3] - D[1]*x[3]*y[0] + D[1]*x[3]*y[3] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[3] - D[7]*x[3]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) - eta*xi*(-D[1]*x[0]*y[2] + D[1]*x[0]*y[3] - D[1]*x[2]*y[0] + D[1]*x[2]*y[3] + D[1]*x[3]*y[0] + D[1]*x[3]*y[2] - 2*D[1]*x[3]*y[3] + 2*D[2]*y[0]*y[2] - 2*D[2]*y[0]*y[3] - 2*D[2]*y[2]*y[3] + 2*D[2]*y[3]*y[3] + 2*D[7]*x[0]*x[2] - 2*D[7]*x[0]*x[3] - 2*D[7]*x[2]*x[3] + 2*D[7]*x[3]*x[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] + D[8]*x[3]*y[2] - 2*D[8]*x[3]*y[3]) + eta*(-2*D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[0]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[2] + 2*D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[2] - 2*D[2]*y[0]*y[3] + 2*D[2]*y[2]*y[3] + 2*D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[2] - 2*D[7]*x[0]*x[3] + 2*D[7]*x[2]*x[3] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]) + xi*xi*(D[1]*x[2]*y[2] - D[1]*x[2]*y[3] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] - D[2]*y[2]*y[2] + 2*D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[2]*x[2] + 2*D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) - xi*(D[1]*x[0]*y[2] - D[1]*x[0]*y[3] + D[1]*x[2]*y[0] - 2*D[1]*x[2]*y[2] + D[1]*x[2]*y[3] - D[1]*x[3]*y[0] + D[1]*x[3]*y[2] - 2*D[2]*y[0]*y[2] + 2*D[2]*y[0]*y[3] + 2*D[2]*y[2]*y[2] - 2*D[2]*y[2]*y[3] - 2*D[7]*x[0]*x[2] + 2*D[7]*x[0]*x[3] + 2*D[7]*x[2]*x[2] - 2*D[7]*x[2]*x[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] + D[8]*x[2]*y[0] - 2*D[8]*x[2]*y[2] + D[8]*x[2]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[2] - D[2]*x[3]*y[0] + D[2]*x[3]*y[2] + D[6]*x[0]*y[1] - D[6]*x[0]*y[3] - D[6]*x[2]*y[1] + D[6]*x[2]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[3] + D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[3] + D[8]*x[3]*x[3]) - eta*xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[1]*y[0] - D[2]*x[1]*y[3] - D[2]*x[3]*y[2] + D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[2]*y[0] - D[6]*x[2]*y[3] - D[6]*x[3]*y[1] + D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) - eta*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[1]*y[0] - D[2]*x[1]*y[3] - D[2]*x[3]*y[2] + D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[2]*y[0] - D[6]*x[2]*y[3] - D[6]*x[3]*y[1] + D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) + xi*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[2]*x[0]*y[2] - D[2]*x[0]*y[3] - D[2]*x[1]*y[2] + D[2]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[1] - D[6]*x[3]*y[0] + D[6]*x[3]*y[1] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3]) + xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + 2*D[0]*y[1]*y[2] - D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[1]*y[0] - 2*D[2]*x[1]*y[2] + D[2]*x[1]*y[3] + D[2]*x[3]*y[2] - D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[2]*y[0] - 2*D[6]*x[2]*y[1] + D[6]*x[2]*y[3] + D[6]*x[3]*y[1] - D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + 2*D[8]*x[1]*x[2] - D[8]*x[1]*x[3] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[1]*y[0] - D[1]*x[1]*y[2] - D[1]*x[3]*y[0] + D[1]*x[3]*y[2] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + eta*eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[3] + D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[3] + D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[1]*y[0] - D[1]*x[1]*y[3] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) - eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[1]*y[0] - D[1]*x[1]*y[3] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) + xi*xi*(D[1]*x[0]*y[2] - D[1]*x[0]*y[3] - D[1]*x[1]*y[2] + D[1]*x[1]*y[3] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]) - xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[2] - D[1]*x[1]*y[0] + 2*D[1]*x[1]*y[2] - D[1]*x[1]*y[3] - D[1]*x[3]*y[2] + D[1]*x[3]*y[3] - D[2]*y[0]*y[0] + D[2]*y[0]*y[1] + D[2]*y[0]*y[2] - 2*D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[1] + D[7]*x[0]*x[2] - 2*D[7]*x[1]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[2]*y[0] + 2*D[8]*x[2]*y[1] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[2] + D[0]*y[2]*y[2] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[2] + D[8]*x[2]*x[2] + eta*eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[3] + D[6]*x[0]*y[1] - D[6]*x[0]*y[2] - D[6]*x[3]*y[1] + D[6]*x[3]*y[2] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[3] - D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[0] + D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - 2*D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[3] - D[2]*x[1]*y[0] - D[2]*x[1]*y[2] + 2*D[2]*x[1]*y[3] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] + D[6]*x[0]*y[0] - D[6]*x[0]*y[1] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] - D[6]*x[3]*y[0] + 2*D[6]*x[3]*y[1] - D[6]*x[3]*y[2] - D[8]*x[0]*x[0] + D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - 2*D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) - eta*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[2] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[2] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) + xi*xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[2] + D[2]*x[0]*y[3] + D[2]*x[1]*y[2] - D[2]*x[1]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[1] + D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[2] + D[2]*x[2]*y[2] - D[2]*x[2]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[2] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[2] + D[2]*y[2]*y[2] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[2] + D[7]*x[2]*x[2] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + eta*eta*(D[1]*x[1]*y[0] - D[1]*x[1]*y[3] - D[1]*x[2]*y[0] + D[1]*x[2]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[3] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[3] - D[7]*x[2]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[3] - D[1]*x[1]*y[0] - D[1]*x[1]*y[2] + 2*D[1]*x[1]*y[3] + D[1]*x[2]*y[2] - D[1]*x[2]*y[3] - D[2]*y[0]*y[0] + D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - 2*D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - 2*D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] - D[8]*x[3]*y[0] + 2*D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[1]*y[0] - D[1]*x[1]*y[2] + D[1]*x[2]*y[2] - D[1]*x[2]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]) + xi*xi*(-D[1]*x[0]*y[2] + D[1]*x[0]*y[3] + D[1]*x[1]*y[2] - D[1]*x[1]*y[3] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[1]*y[0] - D[1]*x[1]*y[2] + D[1]*x[2]*y[2] - D[1]*x[2]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[3] + D[3]*x[2]*y[1] - D[3]*x[2]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2] + eta*eta*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[2] + D[3]*x[3]*y[1] - D[3]*x[3]*y[2] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3]) - eta*xi*(D[3]*x[0]*y[2] - D[3]*x[0]*y[3] + D[3]*x[2]*y[1] - D[3]*x[2]*y[2] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[3]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[3]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) - eta*(-2*D[3]*x[0]*y[1] + D[3]*x[0]*y[2] + D[3]*x[0]*y[3] + D[3]*x[2]*y[1] - D[3]*x[2]*y[2] + D[3]*x[3]*y[1] - D[3]*x[3]*y[3] + 2*D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[2] + D[5]*x[3]*x[3] + 2*D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[2] + D[6]*y[3]*y[3] - 2*D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) + xi*xi*(-D[3]*x[2]*y[2] + D[3]*x[2]*y[3] + D[3]*x[3]*y[2] - D[3]*x[3]*y[3] + D[5]*x[2]*x[2] - 2*D[5]*x[2]*x[3] + D[5]*x[3]*x[3] + D[6]*y[2]*y[2] - 2*D[6]*y[2]*y[3] + D[6]*y[3]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - xi*(-D[3]*x[0]*y[2] + D[3]*x[0]*y[3] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] + D[3]*x[3]*y[1] - D[3]*x[3]*y[3] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[3]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[3]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[3] + D[5]*x[2]*y[1] - D[5]*x[2]*y[3] - D[7]*x[1]*y[0] + D[7]*x[1]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[2] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[2] + D[5]*x[3]*y[1] - D[5]*x[3]*y[2] - D[7]*x[1]*y[0] + D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[3]*x[3] + D[5]*x[0]*y[2] - D[5]*x[0]*y[3] + D[5]*x[2]*y[1] - D[5]*x[2]*y[2] - D[5]*x[3]*y[1] + D[5]*x[3]*y[3] + D[7]*x[1]*y[2] - D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] - D[7]*x[3]*y[0] + D[7]*x[3]*y[3] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[3]*y[3]) - eta*(2*D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[2] + D[4]*x[3]*x[3] - 2*D[5]*x[0]*y[1] + D[5]*x[0]*y[2] + D[5]*x[0]*y[3] + D[5]*x[2]*y[1] - D[5]*x[2]*y[2] + D[5]*x[3]*y[1] - D[5]*x[3]*y[3] - 2*D[7]*x[1]*y[0] + D[7]*x[1]*y[2] + D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] + 2*D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[2] + D[8]*y[3]*y[3]) + xi*xi*(D[4]*x[2]*x[2] - 2*D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[2]*y[2] + D[5]*x[2]*y[3] + D[5]*x[3]*y[2] - D[5]*x[3]*y[3] - D[7]*x[2]*y[2] + D[7]*x[2]*y[3] + D[7]*x[3]*y[2] - D[7]*x[3]*y[3] + D[8]*y[2]*y[2] - 2*D[8]*y[2]*y[3] + D[8]*y[3]*y[3]) - xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[3]*x[3] - D[5]*x[0]*y[2] + D[5]*x[0]*y[3] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] + D[5]*x[3]*y[1] - D[5]*x[3]*y[3] - D[7]*x[1]*y[2] + D[7]*x[1]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[0]*y[0] - D[3]*x[0]*y[2] - D[3]*x[2]*y[0] + D[3]*x[2]*y[2] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[2] - D[5]*x[2]*x[2] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[2] - D[6]*y[2]*y[2] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + eta*eta*(D[3]*x[0]*y[0] - D[3]*x[0]*y[3] - D[3]*x[3]*y[0] + D[3]*x[3]*y[3] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[3] - D[6]*y[3]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) - eta*xi*(-D[3]*x[0]*y[2] + D[3]*x[0]*y[3] - D[3]*x[2]*y[0] + D[3]*x[2]*y[3] + D[3]*x[3]*y[0] + D[3]*x[3]*y[2] - 2*D[3]*x[3]*y[3] + 2*D[5]*x[0]*x[2] - 2*D[5]*x[0]*x[3] - 2*D[5]*x[2]*x[3] + 2*D[5]*x[3]*x[3] + 2*D[6]*y[0]*y[2] - 2*D[6]*y[0]*y[3] - 2*D[6]*y[2]*y[3] + 2*D[6]*y[3]*y[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] + D[8]*x[3]*y[2] - 2*D[8]*x[3]*y[3]) + eta*(-2*D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[0]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[2] + 2*D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[2] - 2*D[5]*x[0]*x[3] + 2*D[5]*x[2]*x[3] + 2*D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[2] - 2*D[6]*y[0]*y[3] + 2*D[6]*y[2]*y[3] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]) + xi*xi*(D[3]*x[2]*y[2] - D[3]*x[2]*y[3] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] - D[5]*x[2]*x[2] + 2*D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[2]*y[2] + 2*D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) - xi*(D[3]*x[0]*y[2] - D[3]*x[0]*y[3] + D[3]*x[2]*y[0] - 2*D[3]*x[2]*y[2] + D[3]*x[2]*y[3] - D[3]*x[3]*y[0] + D[3]*x[3]*y[2] - 2*D[5]*x[0]*x[2] + 2*D[5]*x[0]*x[3] + 2*D[5]*x[2]*x[2] - 2*D[5]*x[2]*x[3] - 2*D[6]*y[0]*y[2] + 2*D[6]*y[0]*y[3] + 2*D[6]*y[2]*y[2] - 2*D[6]*y[2]*y[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] + D[8]*x[2]*y[0] - 2*D[8]*x[2]*y[2] + D[8]*x[2]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[2] - D[4]*x[2]*x[2] + D[5]*x[0]*y[0] - D[5]*x[0]*y[2] - D[5]*x[2]*y[0] + D[5]*x[2]*y[2] + D[7]*x[0]*y[0] - D[7]*x[0]*y[2] - D[7]*x[2]*y[0] + D[7]*x[2]*y[2] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[2] - D[8]*y[2]*y[2] + eta*eta*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[3] - D[4]*x[3]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[3] - D[5]*x[3]*y[0] + D[5]*x[3]*y[3] + D[7]*x[0]*y[0] - D[7]*x[0]*y[3] - D[7]*x[3]*y[0] + D[7]*x[3]*y[3] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[3] - D[8]*y[3]*y[3]) - eta*xi*(2*D[4]*x[0]*x[2] - 2*D[4]*x[0]*x[3] - 2*D[4]*x[2]*x[3] + 2*D[4]*x[3]*x[3] - D[5]*x[0]*y[2] + D[5]*x[0]*y[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[3] + D[5]*x[3]*y[0] + D[5]*x[3]*y[2] - 2*D[5]*x[3]*y[3] - D[7]*x[0]*y[2] + D[7]*x[0]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[3] + D[7]*x[3]*y[0] + D[7]*x[3]*y[2] - 2*D[7]*x[3]*y[3] + 2*D[8]*y[0]*y[2] - 2*D[8]*y[0]*y[3] - 2*D[8]*y[2]*y[3] + 2*D[8]*y[3]*y[3]) + eta*(2*D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[2] - 2*D[4]*x[0]*x[3] + 2*D[4]*x[2]*x[3] - 2*D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[0]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[2] - 2*D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[0]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[2] + 2*D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[2] - 2*D[8]*y[0]*y[3] + 2*D[8]*y[2]*y[3]) + xi*xi*(-D[4]*x[2]*x[2] + 2*D[4]*x[2]*x[3] - D[4]*x[3]*x[3] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] - D[5]*x[3]*y[2] + D[5]*x[3]*y[3] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] - D[7]*x[3]*y[2] + D[7]*x[3]*y[3] - D[8]*y[2]*y[2] + 2*D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) - xi*(-2*D[4]*x[0]*x[2] + 2*D[4]*x[0]*x[3] + 2*D[4]*x[2]*x[2] - 2*D[4]*x[2]*x[3] + D[5]*x[0]*y[2] - D[5]*x[0]*y[3] + D[5]*x[2]*y[0] - 2*D[5]*x[2]*y[2] + D[5]*x[2]*y[3] - D[5]*x[3]*y[0] + D[5]*x[3]*y[2] + D[7]*x[0]*y[2] - D[7]*x[0]*y[3] + D[7]*x[2]*y[0] - 2*D[7]*x[2]*y[2] + D[7]*x[2]*y[3] - D[7]*x[3]*y[0] + D[7]*x[3]*y[2] - 2*D[8]*y[0]*y[2] + 2*D[8]*y[0]*y[3] + 2*D[8]*y[2]*y[2] - 2*D[8]*y[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[0]*y[1] - D[3]*x[0]*y[3] - D[3]*x[2]*y[1] + D[3]*x[2]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2] + eta*eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[3] + D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[3] + D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[2]*y[0] - D[3]*x[2]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) - eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[2]*y[0] - D[3]*x[2]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*xi*(D[3]*x[2]*y[0] - D[3]*x[2]*y[1] - D[3]*x[3]*y[0] + D[3]*x[3]*y[1] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3]) - xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[1] - D[3]*x[2]*y[0] + 2*D[3]*x[2]*y[1] - D[3]*x[2]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] - D[5]*x[0]*x[0] + D[5]*x[0]*x[1] + D[5]*x[0]*x[2] - 2*D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[1] + D[6]*y[0]*y[2] - 2*D[6]*y[1]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[1]*y[0] + 2*D[8]*x[1]*y[2] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[3] - D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[2] - D[7]*x[3]*y[0] + D[7]*x[3]*y[2] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[3] + D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[3] + D[8]*y[3]*y[3]) - eta*xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[2]*y[0] - D[5]*x[2]*y[3] - D[5]*x[3]*y[1] + D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[1]*y[0] - D[7]*x[1]*y[3] - D[7]*x[3]*y[2] + D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) - eta*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[2]*y[0] - D[5]*x[2]*y[3] - D[5]*x[3]*y[1] + D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[1]*y[0] - D[7]*x[1]*y[3] - D[7]*x[3]*y[2] + D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) + xi*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[1] - D[5]*x[3]*y[0] + D[5]*x[3]*y[1] + D[7]*x[0]*y[2] - D[7]*x[0]*y[3] - D[7]*x[1]*y[2] + D[7]*x[1]*y[3] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3]) + xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + 2*D[4]*x[1]*x[2] - D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[2]*y[0] - 2*D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[5]*x[3]*y[1] - D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[1]*y[0] - 2*D[7]*x[1]*y[2] + D[7]*x[1]*y[3] + D[7]*x[3]*y[2] - D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + 2*D[8]*y[1]*y[2] - D[8]*y[1]*y[3] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[2] + D[5]*x[2]*x[2] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[2] + D[6]*y[2]*y[2] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + eta*eta*(D[3]*x[0]*y[1] - D[3]*x[0]*y[2] - D[3]*x[3]*y[1] + D[3]*x[3]*y[2] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[3] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[3] - D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3]) - eta*xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[1] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] - D[3]*x[3]*y[0] + 2*D[3]*x[3]*y[1] - D[3]*x[3]*y[2] - D[5]*x[0]*x[0] + D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - 2*D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - 2*D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + 2*D[8]*x[1]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) - eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[2] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) + xi*xi*(-D[3]*x[2]*y[0] + D[3]*x[2]*y[1] + D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3]) - xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[2] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[2] + D[4]*x[2]*x[2] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[2] + D[8]*y[2]*y[2] + eta*eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[2] - D[5]*x[3]*y[1] + D[5]*x[3]*y[2] + D[7]*x[1]*y[0] - D[7]*x[1]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[3] - D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[0] + D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - 2*D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[1] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] - D[5]*x[3]*y[0] + 2*D[5]*x[3]*y[1] - D[5]*x[3]*y[2] + D[7]*x[0]*y[0] - D[7]*x[0]*y[3] - D[7]*x[1]*y[0] - D[7]*x[1]*y[2] + 2*D[7]*x[1]*y[3] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] - D[8]*y[0]*y[0] + D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - 2*D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) - eta*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[2] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[2] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) + xi*xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[1] + D[5]*x[3]*y[0] - D[5]*x[3]*y[1] - D[7]*x[0]*y[2] + D[7]*x[0]*y[3] + D[7]*x[1]*y[2] - D[7]*x[1]*y[3] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[2] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[2] + D[7]*x[2]*y[2] - D[7]*x[2]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[3] + D[0]*y[3]*y[3] - D[2]*x[1]*y[1] + D[2]*x[1]*y[3] + D[2]*x[3]*y[1] - D[2]*x[3]*y[3] - D[6]*x[1]*y[1] + D[6]*x[1]*y[3] + D[6]*x[3]*y[1] - D[6]*x[3]*y[3] + D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[3] + D[8]*x[3]*x[3] + eta*eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[3] + D[6]*x[0]*y[1] - D[6]*x[0]*y[2] - D[6]*x[3]*y[1] + D[6]*x[3]*y[2] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[3] - D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[1] + 2*D[0]*y[0]*y[2] - D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] - 2*D[2]*x[2]*y[0] + D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] + D[6]*x[0]*y[1] - 2*D[6]*x[0]*y[2] + D[6]*x[0]*y[3] - D[6]*x[1]*y[1] + D[6]*x[1]*y[2] + D[6]*x[3]*y[2] - D[6]*x[3]*y[3] - D[8]*x[0]*x[1] + 2*D[8]*x[0]*x[2] - D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]) - eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] + D[2]*x[2]*y[1] - D[2]*x[2]*y[3] - D[2]*x[3]*y[0] + D[2]*x[3]*y[3] + D[6]*x[0]*y[1] - D[6]*x[0]*y[3] - D[6]*x[1]*y[1] + D[6]*x[1]*y[2] - D[6]*x[3]*y[2] + D[6]*x[3]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) + xi*xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[1] + D[2]*x[3]*y[0] - D[2]*x[3]*y[1] - D[6]*x[0]*y[2] + D[6]*x[0]*y[3] + D[6]*x[1]*y[2] - D[6]*x[1]*y[3] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - xi*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[1] - D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] - D[6]*x[0]*y[1] + D[6]*x[0]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] + D[6]*x[3]*y[2] - D[6]*x[3]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[1]*y[1] + D[1]*x[1]*y[3] + D[1]*x[3]*y[1] - D[1]*x[3]*y[3] + D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[3] + D[2]*y[3]*y[3] + D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[3] + D[7]*x[3]*x[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3] + eta*eta*(D[1]*x[1]*y[0] - D[1]*x[1]*y[3] - D[1]*x[2]*y[0] + D[1]*x[2]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[3] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[3] - D[7]*x[2]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*xi*(D[1]*x[1]*y[0] - D[1]*x[1]*y[1] - 2*D[1]*x[2]*y[0] + D[1]*x[2]*y[1] + D[1]*x[2]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] - D[2]*y[0]*y[1] + 2*D[2]*y[0]*y[2] - D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[2] - D[2]*y[2]*y[3] + D[2]*y[3]*y[3] - D[7]*x[0]*x[1] + 2*D[7]*x[0]*x[2] - D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[7]*x[3]*x[3] + D[8]*x[0]*y[1] - 2*D[8]*x[0]*y[2] + D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]) - eta*(D[1]*x[1]*y[0] - D[1]*x[1]*y[1] + D[1]*x[2]*y[1] - D[1]*x[2]*y[3] - D[1]*x[3]*y[0] + D[1]*x[3]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*xi*(-D[1]*x[2]*y[0] + D[1]*x[2]*y[1] + D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3]) - xi*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[1] - D[1]*x[2]*y[1] + D[1]*x[2]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] + D[2]*y[3]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[7]*x[3]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[2] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[3] - D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[2] - D[6]*x[3]*y[0] + D[6]*x[3]*y[2] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[3] + D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[3] + D[8]*x[3]*x[3]) - eta*xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[2]*y[0] - D[2]*x[2]*y[3] - D[2]*x[3]*y[1] + D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[1]*y[0] - D[6]*x[1]*y[3] - D[6]*x[3]*y[2] + D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) - eta*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[2]*y[0] - D[2]*x[2]*y[3] - D[2]*x[3]*y[1] + D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[1]*y[0] - D[6]*x[1]*y[3] - D[6]*x[3]*y[2] + D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + D[8]*x[1]*x[3] + D[8]*x[2]*x[3] - D[8]*x[3]*x[3]) + xi*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[1] - D[2]*x[3]*y[0] + D[2]*x[3]*y[1] + D[6]*x[0]*y[2] - D[6]*x[0]*y[3] - D[6]*x[1]*y[2] + D[6]*x[1]*y[3] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3]) + xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + 2*D[0]*y[1]*y[2] - D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[0]*y[3]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[2]*y[0] - 2*D[2]*x[2]*y[1] + D[2]*x[2]*y[3] + D[2]*x[3]*y[1] - D[2]*x[3]*y[3] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[1]*y[0] - 2*D[6]*x[1]*y[2] + D[6]*x[1]*y[3] + D[6]*x[3]*y[2] - D[6]*x[3]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + 2*D[8]*x[1]*x[2] - D[8]*x[1]*x[3] - D[8]*x[2]*x[3] + D[8]*x[3]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[0]*y[1] - D[1]*x[0]*y[3] - D[1]*x[2]*y[1] + D[1]*x[2]*y[3] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2] + eta*eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[3] + D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[3] + D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[2]*y[0] - D[1]*x[2]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) - eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[2]*y[0] - D[1]*x[2]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]) + xi*xi*(D[1]*x[2]*y[0] - D[1]*x[2]*y[1] - D[1]*x[3]*y[0] + D[1]*x[3]*y[1] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3]) - xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[1] - D[1]*x[2]*y[0] + 2*D[1]*x[2]*y[1] - D[1]*x[2]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] - D[2]*y[0]*y[0] + D[2]*y[0]*y[1] + D[2]*y[0]*y[2] - 2*D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[2]*y[2]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[1] + D[7]*x[0]*x[2] - 2*D[7]*x[1]*x[2] + D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[7]*x[3]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[1]*y[0] + 2*D[8]*x[1]*y[2] - D[8]*x[1]*y[3] - D[8]*x[3]*y[2] + D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[1]*y[1] + 2*D[0]*y[1]*y[3] - D[0]*y[3]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] - D[2]*x[3]*y[1] + D[2]*x[3]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] - D[6]*x[3]*y[1] + D[6]*x[3]*y[3] - D[8]*x[1]*x[1] + 2*D[8]*x[1]*x[3] - D[8]*x[3]*x[3] + eta*eta*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[3] - D[0]*y[3]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[3] - D[2]*x[3]*y[0] + D[2]*x[3]*y[3] + D[6]*x[0]*y[0] - D[6]*x[0]*y[3] - D[6]*x[3]*y[0] + D[6]*x[3]*y[3] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[3] - D[8]*x[3]*x[3]) + eta*xi*(2*D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[1] - 2*D[0]*y[0]*y[3] + 2*D[0]*y[1]*y[3] - 2*D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[0]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[3] + D[2]*x[3]*y[0] - D[2]*x[3]*y[1] - 2*D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[0]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[3] + D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + 2*D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[1] - 2*D[8]*x[0]*x[3] + 2*D[8]*x[1]*x[3]) - eta*(2*D[0]*y[0]*y[1] - 2*D[0]*y[0]*y[3] - 2*D[0]*y[1]*y[3] + 2*D[0]*y[3]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[3] + D[2]*x[3]*y[0] + D[2]*x[3]*y[1] - 2*D[2]*x[3]*y[3] - D[6]*x[0]*y[1] + D[6]*x[0]*y[3] - D[6]*x[1]*y[0] + D[6]*x[1]*y[3] + D[6]*x[3]*y[0] + D[6]*x[3]*y[1] - 2*D[6]*x[3]*y[3] + 2*D[8]*x[0]*x[1] - 2*D[8]*x[0]*x[3] - 2*D[8]*x[1]*x[3] + 2*D[8]*x[3]*x[3]) + xi*xi*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[1] - D[0]*y[1]*y[1] + D[2]*x[0]*y[0] - D[2]*x[0]*y[1] - D[2]*x[1]*y[0] + D[2]*x[1]*y[1] + D[6]*x[0]*y[0] - D[6]*x[0]*y[1] - D[6]*x[1]*y[0] + D[6]*x[1]*y[1] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[1] - D[8]*x[1]*x[1]) - xi*(-2*D[0]*y[0]*y[1] + 2*D[0]*y[0]*y[3] + 2*D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[3] + D[2]*x[1]*y[0] - 2*D[2]*x[1]*y[1] + D[2]*x[1]*y[3] - D[2]*x[3]*y[0] + D[2]*x[3]*y[1] + D[6]*x[0]*y[1] - D[6]*x[0]*y[3] + D[6]*x[1]*y[0] - 2*D[6]*x[1]*y[1] + D[6]*x[1]*y[3] - D[6]*x[3]*y[0] + D[6]*x[3]*y[1] - 2*D[8]*x[0]*x[1] + 2*D[8]*x[0]*x[3] + 2*D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[1]*y[1] - D[1]*x[1]*y[3] - D[1]*x[3]*y[1] + D[1]*x[3]*y[3] - D[2]*y[1]*y[1] + 2*D[2]*y[1]*y[3] - D[2]*y[3]*y[3] - D[7]*x[1]*x[1] + 2*D[7]*x[1]*x[3] - D[7]*x[3]*x[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3] + eta*eta*(D[1]*x[0]*y[0] - D[1]*x[0]*y[3] - D[1]*x[3]*y[0] + D[1]*x[3]*y[3] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[3] - D[2]*y[3]*y[3] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[3] - D[7]*x[3]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) + eta*xi*(-2*D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[0]*y[3] + D[1]*x[1]*y[0] - D[1]*x[1]*y[3] + D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + 2*D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[1] - 2*D[2]*y[0]*y[3] + 2*D[2]*y[1]*y[3] + 2*D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[1] - 2*D[7]*x[0]*x[3] + 2*D[7]*x[1]*x[3] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - eta*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[3] - D[1]*x[1]*y[0] + D[1]*x[1]*y[3] + D[1]*x[3]*y[0] + D[1]*x[3]*y[1] - 2*D[1]*x[3]*y[3] + 2*D[2]*y[0]*y[1] - 2*D[2]*y[0]*y[3] - 2*D[2]*y[1]*y[3] + 2*D[2]*y[3]*y[3] + 2*D[7]*x[0]*x[1] - 2*D[7]*x[0]*x[3] - 2*D[7]*x[1]*x[3] + 2*D[7]*x[3]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[3]*y[0] + D[8]*x[3]*y[1] - 2*D[8]*x[3]*y[3]) + xi*xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[1] - D[1]*x[1]*y[0] + D[1]*x[1]*y[1] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[1] - D[2]*y[1]*y[1] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[1] - D[7]*x[1]*x[1] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1]) - xi*(D[1]*x[0]*y[1] - D[1]*x[0]*y[3] + D[1]*x[1]*y[0] - 2*D[1]*x[1]*y[1] + D[1]*x[1]*y[3] - D[1]*x[3]*y[0] + D[1]*x[3]*y[1] - 2*D[2]*y[0]*y[1] + 2*D[2]*y[0]*y[3] + 2*D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[3] - 2*D[7]*x[0]*x[1] + 2*D[7]*x[0]*x[3] + 2*D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[3] + D[2]*x[2]*y[1] - D[2]*x[2]*y[3] - D[6]*x[1]*y[0] + D[6]*x[1]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[2] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[3] - D[6]*x[0]*y[1] + D[6]*x[0]*y[2] + D[6]*x[3]*y[1] - D[6]*x[3]*y[2] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[3]) - eta*xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + D[8]*x[0]*x[0] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - eta*(-D[0]*y[0]*y[0] + D[0]*y[0]*y[2] + D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - 2*D[0]*y[2]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] - D[2]*x[2]*y[0] - D[2]*x[2]*y[1] + 2*D[2]*x[2]*y[3] + D[6]*x[0]*y[0] - D[6]*x[0]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] - D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + 2*D[6]*x[3]*y[2] - D[8]*x[0]*x[0] + D[8]*x[0]*x[2] + D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3] - 2*D[8]*x[2]*x[3]) + xi*xi*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[1] + D[0]*y[1]*y[1] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[1] + D[8]*x[1]*x[1]) - xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[3] + D[2]*x[1]*y[1] - D[2]*x[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] + D[6]*x[3]*y[0] - D[6]*x[3]*y[1] + D[8]*x[0]*x[0] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[3] + D[1]*x[2]*y[1] - D[1]*x[2]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2] + eta*eta*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[3] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[1]*y[1] - D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[1] + D[2]*y[0]*y[0] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - eta*(D[1]*x[0]*y[0] - D[1]*x[0]*y[3] + D[1]*x[1]*y[1] - D[1]*x[1]*y[3] - D[1]*x[2]*y[0] - D[1]*x[2]*y[1] + 2*D[1]*x[2]*y[3] - D[2]*y[0]*y[0] + D[2]*y[0]*y[2] + D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] - 2*D[2]*y[2]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[2] + D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - 2*D[7]*x[2]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] - D[8]*x[3]*y[1] + 2*D[8]*x[3]*y[2]) + xi*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[1]*y[0] - D[1]*x[1]*y[1] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[1] + D[2]*y[1]*y[1] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[1] + D[7]*x[1]*x[1] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1]) - xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[3] + D[1]*x[1]*y[1] - D[1]*x[1]*y[3] + D[1]*x[2]*y[0] - D[1]*x[2]*y[1] + D[2]*y[0]*y[0] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[1]*y[1] + D[3]*x[1]*y[3] + D[3]*x[3]*y[1] - D[3]*x[3]*y[3] + D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[3] + D[5]*x[3]*x[3] + D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[3] + D[6]*y[3]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[3]*y[1] - D[8]*x[3]*y[3] + eta*eta*(D[3]*x[0]*y[1] - D[3]*x[0]*y[2] - D[3]*x[3]*y[1] + D[3]*x[3]*y[2] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[3] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[3] - D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3]) - eta*xi*(D[3]*x[0]*y[1] - 2*D[3]*x[0]*y[2] + D[3]*x[0]*y[3] - D[3]*x[1]*y[1] + D[3]*x[1]*y[2] + D[3]*x[3]*y[2] - D[3]*x[3]*y[3] - D[5]*x[0]*x[1] + 2*D[5]*x[0]*x[2] - D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[2] - D[5]*x[2]*x[3] + D[5]*x[3]*x[3] - D[6]*y[0]*y[1] + 2*D[6]*y[0]*y[2] - D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[6]*y[3]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] - 2*D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*(D[3]*x[0]*y[1] - D[3]*x[0]*y[3] - D[3]*x[1]*y[1] + D[3]*x[1]*y[2] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) + xi*xi*(-D[3]*x[0]*y[2] + D[3]*x[0]*y[3] + D[3]*x[1]*y[2] - D[3]*x[1]*y[3] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - xi*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[3] + D[3]*x[1]*y[1] - D[3]*x[1]*y[2] + D[3]*x[3]*y[2] - D[3]*x[3]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] + D[5]*x[3]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[6]*y[3]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[3] + D[4]*x[3]*x[3] - D[5]*x[1]*y[1] + D[5]*x[1]*y[3] + D[5]*x[3]*y[1] - D[5]*x[3]*y[3] - D[7]*x[1]*y[1] + D[7]*x[1]*y[3] + D[7]*x[3]*y[1] - D[7]*x[3]*y[3] + D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[3] + D[8]*y[3]*y[3] + eta*eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[2] - D[5]*x[3]*y[1] + D[5]*x[3]*y[2] + D[7]*x[1]*y[0] - D[7]*x[1]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[3] - D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[1] + 2*D[4]*x[0]*x[2] - D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] + D[5]*x[0]*y[1] - 2*D[5]*x[0]*y[2] + D[5]*x[0]*y[3] - D[5]*x[1]*y[1] + D[5]*x[1]*y[2] + D[5]*x[3]*y[2] - D[5]*x[3]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] - 2*D[7]*x[2]*y[0] + D[7]*x[2]*y[1] + D[7]*x[2]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] - D[8]*y[0]*y[1] + 2*D[8]*y[0]*y[2] - D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]) - eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[3] - D[5]*x[1]*y[1] + D[5]*x[1]*y[2] - D[5]*x[3]*y[2] + D[5]*x[3]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] + D[7]*x[2]*y[1] - D[7]*x[2]*y[3] - D[7]*x[3]*y[0] + D[7]*x[3]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) + xi*xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[2] + D[5]*x[0]*y[3] + D[5]*x[1]*y[2] - D[5]*x[1]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[1] + D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - xi*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] + D[5]*x[3]*y[2] - D[5]*x[3]*y[3] - D[7]*x[1]*y[0] + D[7]*x[1]*y[1] - D[7]*x[2]*y[1] + D[7]*x[2]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[1]*y[0] - D[3]*x[1]*y[2] - D[3]*x[3]*y[0] + D[3]*x[3]*y[2] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + eta*eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[3] + D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[3] + D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[3]) - eta*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[1]*y[0] - D[3]*x[1]*y[3] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) - eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[1]*y[0] - D[3]*x[1]*y[3] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]) + xi*xi*(D[3]*x[0]*y[2] - D[3]*x[0]*y[3] - D[3]*x[1]*y[2] + D[3]*x[1]*y[3] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]) - xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[2] - D[3]*x[1]*y[0] + 2*D[3]*x[1]*y[2] - D[3]*x[1]*y[3] - D[3]*x[3]*y[2] + D[3]*x[3]*y[3] - D[5]*x[0]*x[0] + D[5]*x[0]*x[1] + D[5]*x[0]*x[2] - 2*D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[5]*x[2]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[1] + D[6]*y[0]*y[2] - 2*D[6]*y[1]*y[2] + D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[6]*y[3]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[2]*y[0] + 2*D[8]*x[2]*y[1] - D[8]*x[2]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[2] - D[5]*x[3]*y[0] + D[5]*x[3]*y[2] + D[7]*x[0]*y[1] - D[7]*x[0]*y[3] - D[7]*x[2]*y[1] + D[7]*x[2]*y[3] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[3] + D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[3] + D[8]*y[3]*y[3]) - eta*xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[1]*y[0] - D[5]*x[1]*y[3] - D[5]*x[3]*y[2] + D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[2]*y[0] - D[7]*x[2]*y[3] - D[7]*x[3]*y[1] + D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) - eta*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[1]*y[0] - D[5]*x[1]*y[3] - D[5]*x[3]*y[2] + D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[2]*y[0] - D[7]*x[2]*y[3] - D[7]*x[3]*y[1] + D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + D[8]*y[1]*y[3] + D[8]*y[2]*y[3] - D[8]*y[3]*y[3]) + xi*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[5]*x[0]*y[2] - D[5]*x[0]*y[3] - D[5]*x[1]*y[2] + D[5]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[1] - D[7]*x[3]*y[0] + D[7]*x[3]*y[1] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3]) + xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + 2*D[4]*x[1]*x[2] - D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[4]*x[3]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[1]*y[0] - 2*D[5]*x[1]*y[2] + D[5]*x[1]*y[3] + D[5]*x[3]*y[2] - D[5]*x[3]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[2]*y[0] - 2*D[7]*x[2]*y[1] + D[7]*x[2]*y[3] + D[7]*x[3]*y[1] - D[7]*x[3]*y[3] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + 2*D[8]*y[1]*y[2] - D[8]*y[1]*y[3] - D[8]*y[2]*y[3] + D[8]*y[3]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[1]*y[1] - D[3]*x[1]*y[3] - D[3]*x[3]*y[1] + D[3]*x[3]*y[3] - D[5]*x[1]*x[1] + 2*D[5]*x[1]*x[3] - D[5]*x[3]*x[3] - D[6]*y[1]*y[1] + 2*D[6]*y[1]*y[3] - D[6]*y[3]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[3]*y[1] + D[8]*x[3]*y[3] + eta*eta*(D[3]*x[0]*y[0] - D[3]*x[0]*y[3] - D[3]*x[3]*y[0] + D[3]*x[3]*y[3] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[3] - D[5]*x[3]*x[3] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[3] - D[6]*y[3]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[3]) + eta*xi*(-2*D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[0]*y[3] + D[3]*x[1]*y[0] - D[3]*x[1]*y[3] + D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + 2*D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[1] - 2*D[5]*x[0]*x[3] + 2*D[5]*x[1]*x[3] + 2*D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[1] - 2*D[6]*y[0]*y[3] + 2*D[6]*y[1]*y[3] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - eta*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[3] - D[3]*x[1]*y[0] + D[3]*x[1]*y[3] + D[3]*x[3]*y[0] + D[3]*x[3]*y[1] - 2*D[3]*x[3]*y[3] + 2*D[5]*x[0]*x[1] - 2*D[5]*x[0]*x[3] - 2*D[5]*x[1]*x[3] + 2*D[5]*x[3]*x[3] + 2*D[6]*y[0]*y[1] - 2*D[6]*y[0]*y[3] - 2*D[6]*y[1]*y[3] + 2*D[6]*y[3]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[3]*y[0] + D[8]*x[3]*y[1] - 2*D[8]*x[3]*y[3]) + xi*xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[1] - D[3]*x[1]*y[0] + D[3]*x[1]*y[1] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[1] - D[5]*x[1]*x[1] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[1] - D[6]*y[1]*y[1] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1]) - xi*(D[3]*x[0]*y[1] - D[3]*x[0]*y[3] + D[3]*x[1]*y[0] - 2*D[3]*x[1]*y[1] + D[3]*x[1]*y[3] - D[3]*x[3]*y[0] + D[3]*x[3]*y[1] - 2*D[5]*x[0]*x[1] + 2*D[5]*x[0]*x[3] + 2*D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[3] - 2*D[6]*y[0]*y[1] + 2*D[6]*y[0]*y[3] + 2*D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[3] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[1]*x[1] + 2*D[4]*x[1]*x[3] - D[4]*x[3]*x[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] - D[5]*x[3]*y[1] + D[5]*x[3]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] - D[7]*x[3]*y[1] + D[7]*x[3]*y[3] - D[8]*y[1]*y[1] + 2*D[8]*y[1]*y[3] - D[8]*y[3]*y[3] + eta*eta*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[3] - D[4]*x[3]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[3] - D[5]*x[3]*y[0] + D[5]*x[3]*y[3] + D[7]*x[0]*y[0] - D[7]*x[0]*y[3] - D[7]*x[3]*y[0] + D[7]*x[3]*y[3] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[3] - D[8]*y[3]*y[3]) + eta*xi*(2*D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[1] - 2*D[4]*x[0]*x[3] + 2*D[4]*x[1]*x[3] - 2*D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[0]*y[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[3] + D[5]*x[3]*y[0] - D[5]*x[3]*y[1] - 2*D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[0]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[3] + D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + 2*D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[1] - 2*D[8]*y[0]*y[3] + 2*D[8]*y[1]*y[3]) - eta*(2*D[4]*x[0]*x[1] - 2*D[4]*x[0]*x[3] - 2*D[4]*x[1]*x[3] + 2*D[4]*x[3]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[3] + D[5]*x[3]*y[0] + D[5]*x[3]*y[1] - 2*D[5]*x[3]*y[3] - D[7]*x[0]*y[1] + D[7]*x[0]*y[3] - D[7]*x[1]*y[0] + D[7]*x[1]*y[3] + D[7]*x[3]*y[0] + D[7]*x[3]*y[1] - 2*D[7]*x[3]*y[3] + 2*D[8]*y[0]*y[1] - 2*D[8]*y[0]*y[3] - 2*D[8]*y[1]*y[3] + 2*D[8]*y[3]*y[3]) + xi*xi*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[1] - D[4]*x[1]*x[1] + D[5]*x[0]*y[0] - D[5]*x[0]*y[1] - D[5]*x[1]*y[0] + D[5]*x[1]*y[1] + D[7]*x[0]*y[0] - D[7]*x[0]*y[1] - D[7]*x[1]*y[0] + D[7]*x[1]*y[1] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[1] - D[8]*y[1]*y[1]) - xi*(-2*D[4]*x[0]*x[1] + 2*D[4]*x[0]*x[3] + 2*D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[3] + D[5]*x[1]*y[0] - 2*D[5]*x[1]*y[1] + D[5]*x[1]*y[3] - D[5]*x[3]*y[0] + D[5]*x[3]*y[1] + D[7]*x[0]*y[1] - D[7]*x[0]*y[3] + D[7]*x[1]*y[0] - 2*D[7]*x[1]*y[1] + D[7]*x[1]*y[3] - D[7]*x[3]*y[0] + D[7]*x[3]*y[1] - 2*D[8]*y[0]*y[1] + 2*D[8]*y[0]*y[3] + 2*D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[2] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + eta*eta*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[2] + D[3]*x[3]*y[1] - D[3]*x[3]*y[2] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3]) - eta*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[1]*y[1] - D[3]*x[1]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + D[5]*x[0]*x[0] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]) - eta*(D[3]*x[0]*y[0] - D[3]*x[0]*y[2] + D[3]*x[1]*y[1] - D[3]*x[1]*y[2] - D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + 2*D[3]*x[3]*y[2] - D[5]*x[0]*x[0] + D[5]*x[0]*x[2] + D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] - 2*D[5]*x[2]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[2] + D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - 2*D[6]*y[2]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] - D[8]*x[2]*y[1] + 2*D[8]*x[2]*y[3]) + xi*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[1]*y[0] - D[3]*x[1]*y[1] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[1] + D[5]*x[1]*x[1] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[1] + D[6]*y[1]*y[1] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1]) - xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[1]*y[1] - D[3]*x[1]*y[2] + D[3]*x[3]*y[0] - D[3]*x[3]*y[1] + D[5]*x[0]*x[0] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[2] - D[7]*x[0]*y[1] + D[7]*x[0]*y[3] + D[7]*x[2]*y[1] - D[7]*x[2]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[2] + D[5]*x[3]*y[1] - D[5]*x[3]*y[2] - D[7]*x[1]*y[0] + D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[3] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[3]) - eta*xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[1] + D[8]*y[0]*y[0] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - eta*(-D[4]*x[0]*x[0] + D[4]*x[0]*x[2] + D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - 2*D[4]*x[2]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] - D[5]*x[3]*y[0] - D[5]*x[3]*y[1] + 2*D[5]*x[3]*y[2] + D[7]*x[0]*y[0] - D[7]*x[0]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] - D[7]*x[2]*y[0] - D[7]*x[2]*y[1] + 2*D[7]*x[2]*y[3] - D[8]*y[0]*y[0] + D[8]*y[0]*y[2] + D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3] - 2*D[8]*y[2]*y[3]) + xi*xi*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[1] + D[4]*x[1]*x[1] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[1] + D[8]*y[1]*y[1]) - xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] + D[5]*x[3]*y[0] - D[5]*x[3]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[3] + D[7]*x[1]*y[1] - D[7]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[1] + D[8]*y[0]*y[0] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[2] - D[2]*x[3]*y[0] + D[2]*x[3]*y[2] + D[6]*x[0]*y[1] - D[6]*x[0]*y[3] - D[6]*x[2]*y[1] + D[6]*x[2]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[3] + eta*eta*(D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[2] + D[0]*y[2]*y[2] - D[2]*x[1]*y[1] + D[2]*x[1]*y[2] + D[2]*x[2]*y[1] - D[2]*x[2]*y[2] - D[6]*x[1]*y[1] + D[6]*x[1]*y[2] + D[6]*x[2]*y[1] - D[6]*x[2]*y[2] + D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[2] + D[8]*x[2]*x[2]) - eta*xi*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[1] + D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[2]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[1] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] - D[2]*x[3]*y[1] + D[2]*x[3]*y[2] - D[6]*x[0]*y[1] + D[6]*x[0]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] - D[6]*x[2]*y[2] + D[6]*x[2]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[1] + D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[2]*x[3]) - eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[1] - D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] - D[2]*x[2]*y[0] + D[2]*x[2]*y[2] + D[2]*x[3]*y[1] - D[2]*x[3]*y[2] + D[6]*x[0]*y[1] - D[6]*x[0]*y[2] - D[6]*x[1]*y[1] + D[6]*x[1]*y[3] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[1] - D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) + xi*xi*(-D[0]*y[0]*y[2] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[1]*y[3] + D[2]*x[2]*y[0] - D[2]*x[2]*y[1] - D[2]*x[3]*y[0] + D[2]*x[3]*y[1] + D[6]*x[0]*y[2] - D[6]*x[0]*y[3] - D[6]*x[1]*y[2] + D[6]*x[1]*y[3] - D[8]*x[0]*x[2] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[1]*x[3]) - xi*(-D[0]*y[0]*y[1] - D[0]*y[0]*y[2] + 2*D[0]*y[0]*y[3] + D[0]*y[1]*y[1] - D[0]*y[1]*y[3] + D[0]*y[2]*y[2] - D[0]*y[2]*y[3] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] - 2*D[2]*x[3]*y[0] + D[2]*x[3]*y[1] + D[2]*x[3]*y[2] + D[6]*x[0]*y[1] + D[6]*x[0]*y[2] - 2*D[6]*x[0]*y[3] - D[6]*x[1]*y[1] + D[6]*x[1]*y[3] - D[6]*x[2]*y[2] + D[6]*x[2]*y[3] - D[8]*x[0]*x[1] - D[8]*x[0]*x[2] + 2*D[8]*x[0]*x[3] + D[8]*x[1]*x[1] - D[8]*x[1]*x[3] + D[8]*x[2]*x[2] - D[8]*x[2]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[1]*y[0] - D[1]*x[1]*y[2] - D[1]*x[3]*y[0] + D[1]*x[3]*y[2] - D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[3] - D[8]*x[2]*y[1] + D[8]*x[2]*y[3] + eta*eta*(-D[1]*x[1]*y[1] + D[1]*x[1]*y[2] + D[1]*x[2]*y[1] - D[1]*x[2]*y[2] + D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[2] + D[2]*y[2]*y[2] + D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[2] + D[7]*x[2]*x[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2]) - eta*xi*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[1] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] - D[1]*x[3]*y[1] + D[1]*x[3]*y[2] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[1] + D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[1] + D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[2]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3]) - eta*(D[1]*x[1]*y[0] - D[1]*x[1]*y[1] - D[1]*x[2]*y[0] + D[1]*x[2]*y[2] + D[1]*x[3]*y[1] - D[1]*x[3]*y[2] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[1] - D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[1] - D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) + xi*xi*(D[1]*x[2]*y[0] - D[1]*x[2]*y[1] - D[1]*x[3]*y[0] + D[1]*x[3]*y[1] - D[2]*y[0]*y[2] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[1]*y[3] - D[7]*x[0]*x[2] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[1]*x[3] + D[8]*x[0]*y[2] - D[8]*x[0]*y[3] - D[8]*x[1]*y[2] + D[8]*x[1]*y[3]) - xi*(D[1]*x[1]*y[0] - D[1]*x[1]*y[1] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] - 2*D[1]*x[3]*y[0] + D[1]*x[3]*y[1] + D[1]*x[3]*y[2] - D[2]*y[0]*y[1] - D[2]*y[0]*y[2] + 2*D[2]*y[0]*y[3] + D[2]*y[1]*y[1] - D[2]*y[1]*y[3] + D[2]*y[2]*y[2] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] - D[7]*x[0]*x[2] + 2*D[7]*x[0]*x[3] + D[7]*x[1]*x[1] - D[7]*x[1]*x[3] + D[7]*x[2]*x[2] - D[7]*x[2]*x[3] + D[8]*x[0]*y[1] + D[8]*x[0]*y[2] - 2*D[8]*x[0]*y[3] - D[8]*x[1]*y[1] + D[8]*x[1]*y[3] - D[8]*x[2]*y[2] + D[8]*x[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[2] + D[0]*y[2]*y[2] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[2]*y[0] - D[2]*x[2]*y[2] - D[6]*x[0]*y[0] + D[6]*x[0]*y[2] + D[6]*x[2]*y[0] - D[6]*x[2]*y[2] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[2] + D[8]*x[2]*x[2] + eta*eta*(-D[0]*y[0]*y[1] + D[0]*y[0]*y[2] + D[0]*y[1]*y[3] - D[0]*y[2]*y[3] + D[2]*x[0]*y[1] - D[2]*x[0]*y[2] - D[2]*x[3]*y[1] + D[2]*x[3]*y[2] + D[6]*x[1]*y[0] - D[6]*x[1]*y[3] - D[6]*x[2]*y[0] + D[6]*x[2]*y[3] - D[8]*x[0]*x[1] + D[8]*x[0]*x[2] + D[8]*x[1]*x[3] - D[8]*x[2]*x[3]) - eta*xi*(-D[0]*y[0]*y[0] + D[0]*y[0]*y[1] + D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - 2*D[0]*y[1]*y[3] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[1] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] - D[2]*x[3]*y[0] + 2*D[2]*x[3]*y[1] - D[2]*x[3]*y[2] + D[6]*x[0]*y[0] - D[6]*x[0]*y[3] - D[6]*x[1]*y[0] - D[6]*x[1]*y[2] + 2*D[6]*x[1]*y[3] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] - D[8]*x[0]*x[0] + D[8]*x[0]*x[1] + D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - 2*D[8]*x[1]*x[3] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) - eta*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[2] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[2] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]) + xi*xi*(D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[2]*y[0] + D[2]*x[2]*y[1] + D[2]*x[3]*y[0] - D[2]*x[3]*y[1] - D[6]*x[0]*y[2] + D[6]*x[0]*y[3] + D[6]*x[1]*y[2] - D[6]*x[1]*y[3] + D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[1] - D[0]*y[0]*y[3] + D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[0]*y[2]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[2] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[1]*y[0] - D[6]*x[1]*y[2] + D[6]*x[2]*y[2] - D[6]*x[2]*y[3] + D[8]*x[0]*x[0] - D[8]*x[0]*x[1] - D[8]*x[0]*x[3] + D[8]*x[1]*x[2] - D[8]*x[2]*x[2] + D[8]*x[2]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[2]*y[0] - D[1]*x[2]*y[2] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[2] + D[2]*y[2]*y[2] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[2] + D[7]*x[2]*x[2] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + eta*eta*(D[1]*x[0]*y[1] - D[1]*x[0]*y[2] - D[1]*x[3]*y[1] + D[1]*x[3]*y[2] - D[2]*y[0]*y[1] + D[2]*y[0]*y[2] + D[2]*y[1]*y[3] - D[2]*y[2]*y[3] - D[7]*x[0]*x[1] + D[7]*x[0]*x[2] + D[7]*x[1]*x[3] - D[7]*x[2]*x[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[3]) - eta*xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[1] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] - D[1]*x[3]*y[0] + 2*D[1]*x[3]*y[1] - D[1]*x[3]*y[2] - D[2]*y[0]*y[0] + D[2]*y[0]*y[1] + D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - 2*D[2]*y[1]*y[3] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[1] + D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - 2*D[7]*x[1]*x[3] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] - D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + 2*D[8]*x[1]*y[3] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) - eta*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[2] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]) + xi*xi*(-D[1]*x[2]*y[0] + D[1]*x[2]*y[1] + D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[2] + D[8]*x[0]*y[3] + D[8]*x[1]*y[2] - D[8]*x[1]*y[3]) - xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[2] + D[2]*y[0]*y[0] - D[2]*y[0]*y[1] - D[2]*y[0]*y[3] + D[2]*y[1]*y[2] - D[2]*y[2]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[1] - D[7]*x[0]*x[3] + D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[2] - D[8]*x[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[0]*y[0]*y[1] - D[0]*y[0]*y[3] - D[0]*y[1]*y[2] + D[0]*y[2]*y[3] - D[2]*x[1]*y[0] + D[2]*x[1]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[2] - D[6]*x[0]*y[1] + D[6]*x[0]*y[3] + D[6]*x[2]*y[1] - D[6]*x[2]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[3] - D[8]*x[1]*x[2] + D[8]*x[2]*x[3] + eta*eta*(D[0]*y[0]*y[1] - D[0]*y[0]*y[2] - D[0]*y[1]*y[3] + D[0]*y[2]*y[3] - D[2]*x[0]*y[1] + D[2]*x[0]*y[2] + D[2]*x[3]*y[1] - D[2]*x[3]*y[2] - D[6]*x[1]*y[0] + D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[3] + D[8]*x[0]*x[1] - D[8]*x[0]*x[2] - D[8]*x[1]*x[3] + D[8]*x[2]*x[3]) - eta*xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[1] + D[8]*x[0]*x[0] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3]) - eta*(-D[0]*y[0]*y[0] + D[0]*y[0]*y[2] + D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - 2*D[0]*y[2]*y[3] + D[2]*x[0]*y[0] - D[2]*x[0]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] - D[2]*x[3]*y[0] - D[2]*x[3]*y[1] + 2*D[2]*x[3]*y[2] + D[6]*x[0]*y[0] - D[6]*x[0]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] - D[6]*x[2]*y[0] - D[6]*x[2]*y[1] + 2*D[6]*x[2]*y[3] - D[8]*x[0]*x[0] + D[8]*x[0]*x[2] + D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3] - 2*D[8]*x[2]*x[3]) + xi*xi*(D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[1] + D[0]*y[1]*y[1] - D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[1]*y[0] - D[2]*x[1]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[1]*y[0] - D[6]*x[1]*y[1] + D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[1] + D[8]*x[1]*x[1]) - xi*(D[0]*y[0]*y[0] - D[0]*y[0]*y[2] - D[0]*y[0]*y[3] - D[0]*y[1]*y[1] + D[0]*y[1]*y[2] + D[0]*y[1]*y[3] - D[2]*x[0]*y[0] + D[2]*x[0]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] + D[2]*x[3]*y[0] - D[2]*x[3]*y[1] - D[6]*x[0]*y[0] + D[6]*x[0]*y[3] + D[6]*x[1]*y[1] - D[6]*x[1]*y[3] + D[6]*x[2]*y[0] - D[6]*x[2]*y[1] + D[8]*x[0]*x[0] - D[8]*x[0]*x[2] - D[8]*x[0]*x[3] - D[8]*x[1]*x[1] + D[8]*x[1]*x[2] + D[8]*x[1]*x[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[1]*x[1]*y[0] + D[1]*x[1]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[2] + D[2]*y[0]*y[1] - D[2]*y[0]*y[3] - D[2]*y[1]*y[2] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[3] - D[7]*x[1]*x[2] + D[7]*x[2]*x[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[3] + D[8]*x[2]*y[1] - D[8]*x[2]*y[3] + eta*eta*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[2] + D[1]*x[3]*y[1] - D[1]*x[3]*y[2] + D[2]*y[0]*y[1] - D[2]*y[0]*y[2] - D[2]*y[1]*y[3] + D[2]*y[2]*y[3] + D[7]*x[0]*x[1] - D[7]*x[0]*x[2] - D[7]*x[1]*x[3] + D[7]*x[2]*x[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[3]) - eta*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[1]*y[1] - D[1]*x[1]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + D[2]*y[0]*y[0] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]) - eta*(D[1]*x[0]*y[0] - D[1]*x[0]*y[2] + D[1]*x[1]*y[1] - D[1]*x[1]*y[2] - D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + 2*D[1]*x[3]*y[2] - D[2]*y[0]*y[0] + D[2]*y[0]*y[2] + D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] - 2*D[2]*y[2]*y[3] - D[7]*x[0]*x[0] + D[7]*x[0]*x[2] + D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - 2*D[7]*x[2]*x[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] - D[8]*x[2]*y[0] - D[8]*x[2]*y[1] + 2*D[8]*x[2]*y[3]) + xi*xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[1]*y[0] - D[1]*x[1]*y[1] + D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[1] + D[2]*y[1]*y[1] + D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[1] + D[7]*x[1]*x[1] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1]) - xi*(-D[1]*x[0]*y[0] + D[1]*x[0]*y[2] + D[1]*x[1]*y[1] - D[1]*x[1]*y[2] + D[1]*x[3]*y[0] - D[1]*x[3]*y[1] + D[2]*y[0]*y[0] - D[2]*y[0]*y[2] - D[2]*y[0]*y[3] - D[2]*y[1]*y[1] + D[2]*y[1]*y[2] + D[2]*y[1]*y[3] + D[7]*x[0]*x[0] - D[7]*x[0]*x[2] - D[7]*x[0]*x[3] - D[7]*x[1]*x[1] + D[7]*x[1]*x[2] + D[7]*x[1]*x[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[3] + D[8]*x[1]*y[1] - D[8]*x[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[2] - D[0]*y[2]*y[2] + D[2]*x[0]*y[0] - D[2]*x[0]*y[2] - D[2]*x[2]*y[0] + D[2]*x[2]*y[2] + D[6]*x[0]*y[0] - D[6]*x[0]*y[2] - D[6]*x[2]*y[0] + D[6]*x[2]*y[2] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[2] - D[8]*x[2]*x[2] + eta*eta*(-D[0]*y[1]*y[1] + 2*D[0]*y[1]*y[2] - D[0]*y[2]*y[2] + D[2]*x[1]*y[1] - D[2]*x[1]*y[2] - D[2]*x[2]*y[1] + D[2]*x[2]*y[2] + D[6]*x[1]*y[1] - D[6]*x[1]*y[2] - D[6]*x[2]*y[1] + D[6]*x[2]*y[2] - D[8]*x[1]*x[1] + 2*D[8]*x[1]*x[2] - D[8]*x[2]*x[2]) - eta*xi*(-2*D[0]*y[0]*y[1] + 2*D[0]*y[0]*y[2] + 2*D[0]*y[1]*y[1] - 2*D[0]*y[1]*y[2] + D[2]*x[0]*y[1] - D[2]*x[0]*y[2] + D[2]*x[1]*y[0] - 2*D[2]*x[1]*y[1] + D[2]*x[1]*y[2] - D[2]*x[2]*y[0] + D[2]*x[2]*y[1] + D[6]*x[0]*y[1] - D[6]*x[0]*y[2] + D[6]*x[1]*y[0] - 2*D[6]*x[1]*y[1] + D[6]*x[1]*y[2] - D[6]*x[2]*y[0] + D[6]*x[2]*y[1] - 2*D[8]*x[0]*x[1] + 2*D[8]*x[0]*x[2] + 2*D[8]*x[1]*x[1] - 2*D[8]*x[1]*x[2]) - eta*(2*D[0]*y[0]*y[1] - 2*D[0]*y[0]*y[2] - 2*D[0]*y[1]*y[2] + 2*D[0]*y[2]*y[2] - D[2]*x[0]*y[1] + D[2]*x[0]*y[2] - D[2]*x[1]*y[0] + D[2]*x[1]*y[2] + D[2]*x[2]*y[0] + D[2]*x[2]*y[1] - 2*D[2]*x[2]*y[2] - D[6]*x[0]*y[1] + D[6]*x[0]*y[2] - D[6]*x[1]*y[0] + D[6]*x[1]*y[2] + D[6]*x[2]*y[0] + D[6]*x[2]*y[1] - 2*D[6]*x[2]*y[2] + 2*D[8]*x[0]*x[1] - 2*D[8]*x[0]*x[2] - 2*D[8]*x[1]*x[2] + 2*D[8]*x[2]*x[2]) + xi*xi*(-D[0]*y[0]*y[0] + 2*D[0]*y[0]*y[1] - D[0]*y[1]*y[1] + D[2]*x[0]*y[0] - D[2]*x[0]*y[1] - D[2]*x[1]*y[0] + D[2]*x[1]*y[1] + D[6]*x[0]*y[0] - D[6]*x[0]*y[1] - D[6]*x[1]*y[0] + D[6]*x[1]*y[1] - D[8]*x[0]*x[0] + 2*D[8]*x[0]*x[1] - D[8]*x[1]*x[1]) + xi*(2*D[0]*y[0]*y[0] - 2*D[0]*y[0]*y[1] - 2*D[0]*y[0]*y[2] + 2*D[0]*y[1]*y[2] - 2*D[2]*x[0]*y[0] + D[2]*x[0]*y[1] + D[2]*x[0]*y[2] + D[2]*x[1]*y[0] - D[2]*x[1]*y[2] + D[2]*x[2]*y[0] - D[2]*x[2]*y[1] - 2*D[6]*x[0]*y[0] + D[6]*x[0]*y[1] + D[6]*x[0]*y[2] + D[6]*x[1]*y[0] - D[6]*x[1]*y[2] + D[6]*x[2]*y[0] - D[6]*x[2]*y[1] + 2*D[8]*x[0]*x[0] - 2*D[8]*x[0]*x[1] - 2*D[8]*x[0]*x[2] + 2*D[8]*x[1]*x[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[1]*x[0]*y[0] - D[1]*x[0]*y[2] - D[1]*x[2]*y[0] + D[1]*x[2]*y[2] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[2] - D[2]*y[2]*y[2] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[2] - D[7]*x[2]*x[2] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + eta*eta*(D[1]*x[1]*y[1] - D[1]*x[1]*y[2] - D[1]*x[2]*y[1] + D[1]*x[2]*y[2] - D[2]*y[1]*y[1] + 2*D[2]*y[1]*y[2] - D[2]*y[2]*y[2] - D[7]*x[1]*x[1] + 2*D[7]*x[1]*x[2] - D[7]*x[2]*x[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2]) - eta*xi*(D[1]*x[0]*y[1] - D[1]*x[0]*y[2] + D[1]*x[1]*y[0] - 2*D[1]*x[1]*y[1] + D[1]*x[1]*y[2] - D[1]*x[2]*y[0] + D[1]*x[2]*y[1] - 2*D[2]*y[0]*y[1] + 2*D[2]*y[0]*y[2] + 2*D[2]*y[1]*y[1] - 2*D[2]*y[1]*y[2] - 2*D[7]*x[0]*x[1] + 2*D[7]*x[0]*x[2] + 2*D[7]*x[1]*x[1] - 2*D[7]*x[1]*x[2] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1]) - eta*(-D[1]*x[0]*y[1] + D[1]*x[0]*y[2] - D[1]*x[1]*y[0] + D[1]*x[1]*y[2] + D[1]*x[2]*y[0] + D[1]*x[2]*y[1] - 2*D[1]*x[2]*y[2] + 2*D[2]*y[0]*y[1] - 2*D[2]*y[0]*y[2] - 2*D[2]*y[1]*y[2] + 2*D[2]*y[2]*y[2] + 2*D[7]*x[0]*x[1] - 2*D[7]*x[0]*x[2] - 2*D[7]*x[1]*x[2] + 2*D[7]*x[2]*x[2] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[2]*y[0] + D[8]*x[2]*y[1] - 2*D[8]*x[2]*y[2]) + xi*xi*(D[1]*x[0]*y[0] - D[1]*x[0]*y[1] - D[1]*x[1]*y[0] + D[1]*x[1]*y[1] - D[2]*y[0]*y[0] + 2*D[2]*y[0]*y[1] - D[2]*y[1]*y[1] - D[7]*x[0]*x[0] + 2*D[7]*x[0]*x[1] - D[7]*x[1]*x[1] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1]) + xi*(-2*D[1]*x[0]*y[0] + D[1]*x[0]*y[1] + D[1]*x[0]*y[2] + D[1]*x[1]*y[0] - D[1]*x[1]*y[2] + D[1]*x[2]*y[0] - D[1]*x[2]*y[1] + 2*D[2]*y[0]*y[0] - 2*D[2]*y[0]*y[1] - 2*D[2]*y[0]*y[2] + 2*D[2]*y[1]*y[2] + 2*D[7]*x[0]*x[0] - 2*D[7]*x[0]*x[1] - 2*D[7]*x[0]*x[2] + 2*D[7]*x[1]*x[2] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[0]*y[1] - D[3]*x[0]*y[3] - D[3]*x[2]*y[1] + D[3]*x[2]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] + D[8]*x[3]*y[2] + eta*eta*(-D[3]*x[1]*y[1] + D[3]*x[1]*y[2] + D[3]*x[2]*y[1] - D[3]*x[2]*y[2] + D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[2] + D[5]*x[2]*x[2] + D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[2] + D[6]*y[2]*y[2] - D[8]*x[1]*y[1] + D[8]*x[1]*y[2] + D[8]*x[2]*y[1] - D[8]*x[2]*y[2]) - eta*xi*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[2] + D[3]*x[1]*y[1] - D[3]*x[1]*y[3] - D[3]*x[2]*y[2] + D[3]*x[2]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[1] + D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[1] + D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[2]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*(D[3]*x[0]*y[1] - D[3]*x[0]*y[2] - D[3]*x[1]*y[1] + D[3]*x[1]*y[3] + D[3]*x[2]*y[2] - D[3]*x[2]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[1] - D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[1] - D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) + xi*xi*(D[3]*x[0]*y[2] - D[3]*x[0]*y[3] - D[3]*x[1]*y[2] + D[3]*x[1]*y[3] - D[5]*x[0]*x[2] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[1]*x[3] - D[6]*y[0]*y[2] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[1]*y[3] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1] - D[8]*x[3]*y[0] + D[8]*x[3]*y[1]) - xi*(D[3]*x[0]*y[1] + D[3]*x[0]*y[2] - 2*D[3]*x[0]*y[3] - D[3]*x[1]*y[1] + D[3]*x[1]*y[3] - D[3]*x[2]*y[2] + D[3]*x[2]*y[3] - D[5]*x[0]*x[1] - D[5]*x[0]*x[2] + 2*D[5]*x[0]*x[3] + D[5]*x[1]*x[1] - D[5]*x[1]*x[3] + D[5]*x[2]*x[2] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] - D[6]*y[0]*y[2] + 2*D[6]*y[0]*y[3] + D[6]*y[1]*y[1] - D[6]*y[1]*y[3] + D[6]*y[2]*y[2] - D[6]*y[2]*y[3] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] - 2*D[8]*x[3]*y[0] + D[8]*x[3]*y[1] + D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[3] - D[5]*x[2]*y[1] + D[5]*x[2]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[2] - D[7]*x[3]*y[0] + D[7]*x[3]*y[2] - D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[3] + eta*eta*(D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[2] + D[4]*x[2]*x[2] - D[5]*x[1]*y[1] + D[5]*x[1]*y[2] + D[5]*x[2]*y[1] - D[5]*x[2]*y[2] - D[7]*x[1]*y[1] + D[7]*x[1]*y[2] + D[7]*x[2]*y[1] - D[7]*x[2]*y[2] + D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[2] + D[8]*y[2]*y[2]) - eta*xi*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[1] + D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[2]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] - D[5]*x[2]*y[2] + D[5]*x[2]*y[3] - D[7]*x[1]*y[0] + D[7]*x[1]*y[1] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] - D[7]*x[3]*y[1] + D[7]*x[3]*y[2] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[1] + D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[2]*y[3]) - eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[1] - D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] + D[5]*x[0]*y[1] - D[5]*x[0]*y[2] - D[5]*x[1]*y[1] + D[5]*x[1]*y[3] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] - D[7]*x[2]*y[0] + D[7]*x[2]*y[2] + D[7]*x[3]*y[1] - D[7]*x[3]*y[2] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[1] - D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) + xi*xi*(-D[4]*x[0]*x[2] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[1]*x[3] + D[5]*x[0]*y[2] - D[5]*x[0]*y[3] - D[5]*x[1]*y[2] + D[5]*x[1]*y[3] + D[7]*x[2]*y[0] - D[7]*x[2]*y[1] - D[7]*x[3]*y[0] + D[7]*x[3]*y[1] - D[8]*y[0]*y[2] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[1]*y[3]) - xi*(-D[4]*x[0]*x[1] - D[4]*x[0]*x[2] + 2*D[4]*x[0]*x[3] + D[4]*x[1]*x[1] - D[4]*x[1]*x[3] + D[4]*x[2]*x[2] - D[4]*x[2]*x[3] + D[5]*x[0]*y[1] + D[5]*x[0]*y[2] - 2*D[5]*x[0]*y[3] - D[5]*x[1]*y[1] + D[5]*x[1]*y[3] - D[5]*x[2]*y[2] + D[5]*x[2]*y[3] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] - 2*D[7]*x[3]*y[0] + D[7]*x[3]*y[1] + D[7]*x[3]*y[2] - D[8]*y[0]*y[1] - D[8]*y[0]*y[2] + 2*D[8]*y[0]*y[3] + D[8]*y[1]*y[1] - D[8]*y[1]*y[3] + D[8]*y[2]*y[2] - D[8]*y[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[2] + D[3]*x[2]*y[0] - D[3]*x[2]*y[2] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[2] + D[5]*x[2]*x[2] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[2] + D[6]*y[2]*y[2] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[2] + eta*eta*(D[3]*x[1]*y[0] - D[3]*x[1]*y[3] - D[3]*x[2]*y[0] + D[3]*x[2]*y[3] - D[5]*x[0]*x[1] + D[5]*x[0]*x[2] + D[5]*x[1]*x[3] - D[5]*x[2]*x[3] - D[6]*y[0]*y[1] + D[6]*y[0]*y[2] + D[6]*y[1]*y[3] - D[6]*y[2]*y[3] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] - D[8]*x[3]*y[1] + D[8]*x[3]*y[2]) - eta*xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[3] - D[3]*x[1]*y[0] - D[3]*x[1]*y[2] + 2*D[3]*x[1]*y[3] + D[3]*x[2]*y[2] - D[3]*x[2]*y[3] - D[5]*x[0]*x[0] + D[5]*x[0]*x[1] + D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - 2*D[5]*x[1]*x[3] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[1] + D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - 2*D[6]*y[1]*y[3] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] - D[8]*x[3]*y[0] + 2*D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[1]*y[0] - D[3]*x[1]*y[2] + D[3]*x[2]*y[2] - D[3]*x[2]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]) + xi*xi*(-D[3]*x[0]*y[2] + D[3]*x[0]*y[3] + D[3]*x[1]*y[2] - D[3]*x[1]*y[3] + D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[1]*y[0] - D[3]*x[1]*y[2] + D[3]*x[2]*y[2] - D[3]*x[2]*y[3] + D[5]*x[0]*x[0] - D[5]*x[0]*x[1] - D[5]*x[0]*x[3] + D[5]*x[1]*x[2] - D[5]*x[2]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[1] - D[6]*y[0]*y[3] + D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[6]*y[2]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[2] + D[4]*x[2]*x[2] - D[5]*x[0]*y[0] + D[5]*x[0]*y[2] + D[5]*x[2]*y[0] - D[5]*x[2]*y[2] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[2]*y[0] - D[7]*x[2]*y[2] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[2] + D[8]*y[2]*y[2] + eta*eta*(-D[4]*x[0]*x[1] + D[4]*x[0]*x[2] + D[4]*x[1]*x[3] - D[4]*x[2]*x[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[3] - D[5]*x[2]*y[0] + D[5]*x[2]*y[3] + D[7]*x[0]*y[1] - D[7]*x[0]*y[2] - D[7]*x[3]*y[1] + D[7]*x[3]*y[2] - D[8]*y[0]*y[1] + D[8]*y[0]*y[2] + D[8]*y[1]*y[3] - D[8]*y[2]*y[3]) - eta*xi*(-D[4]*x[0]*x[0] + D[4]*x[0]*x[1] + D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - 2*D[4]*x[1]*x[3] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[3] - D[5]*x[1]*y[0] - D[5]*x[1]*y[2] + 2*D[5]*x[1]*y[3] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] + D[7]*x[0]*y[0] - D[7]*x[0]*y[1] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] - D[7]*x[3]*y[0] + 2*D[7]*x[3]*y[1] - D[7]*x[3]*y[2] - D[8]*y[0]*y[0] + D[8]*y[0]*y[1] + D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - 2*D[8]*y[1]*y[3] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) - eta*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[2] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[2] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]) + xi*xi*(D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[2] + D[5]*x[0]*y[3] + D[5]*x[1]*y[2] - D[5]*x[1]*y[3] - D[7]*x[2]*y[0] + D[7]*x[2]*y[1] + D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[1] - D[4]*x[0]*x[3] + D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[1]*y[0] - D[5]*x[1]*y[2] + D[5]*x[2]*y[2] - D[5]*x[2]*y[3] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[2] + D[8]*y[0]*y[0] - D[8]*y[0]*y[1] - D[8]*y[0]*y[3] + D[8]*y[1]*y[2] - D[8]*y[2]*y[2] + D[8]*y[2]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[3] + D[3]*x[2]*y[1] - D[3]*x[2]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[3] - D[5]*x[1]*x[2] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[3] - D[6]*y[1]*y[2] + D[6]*y[2]*y[3] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[2] + eta*eta*(-D[3]*x[1]*y[0] + D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[3] + D[5]*x[0]*x[1] - D[5]*x[0]*x[2] - D[5]*x[1]*x[3] + D[5]*x[2]*x[3] + D[6]*y[0]*y[1] - D[6]*y[0]*y[2] - D[6]*y[1]*y[3] + D[6]*y[2]*y[3] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[3]*y[1] - D[8]*x[3]*y[2]) - eta*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[1]*y[1] - D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[1] + D[5]*x[0]*x[0] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]) - eta*(D[3]*x[0]*y[0] - D[3]*x[0]*y[3] + D[3]*x[1]*y[1] - D[3]*x[1]*y[3] - D[3]*x[2]*y[0] - D[3]*x[2]*y[1] + 2*D[3]*x[2]*y[3] - D[5]*x[0]*x[0] + D[5]*x[0]*x[2] + D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] - 2*D[5]*x[2]*x[3] - D[6]*y[0]*y[0] + D[6]*y[0]*y[2] + D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - 2*D[6]*y[2]*y[3] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[3]*y[0] - D[8]*x[3]*y[1] + 2*D[8]*x[3]*y[2]) + xi*xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[1]*y[0] - D[3]*x[1]*y[1] + D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[1] + D[5]*x[1]*x[1] + D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[1] + D[6]*y[1]*y[1] - D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[1]*y[0] - D[8]*x[1]*y[1]) - xi*(-D[3]*x[0]*y[0] + D[3]*x[0]*y[3] + D[3]*x[1]*y[1] - D[3]*x[1]*y[3] + D[3]*x[2]*y[0] - D[3]*x[2]*y[1] + D[5]*x[0]*x[0] - D[5]*x[0]*x[2] - D[5]*x[0]*x[3] - D[5]*x[1]*x[1] + D[5]*x[1]*x[2] + D[5]*x[1]*x[3] + D[6]*y[0]*y[0] - D[6]*y[0]*y[2] - D[6]*y[0]*y[3] - D[6]*y[1]*y[1] + D[6]*y[1]*y[2] + D[6]*y[1]*y[3] - D[8]*x[0]*y[0] + D[8]*x[0]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] + D[8]*x[3]*y[0] - D[8]*x[3]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[4]*x[0]*x[1] - D[4]*x[0]*x[3] - D[4]*x[1]*x[2] + D[4]*x[2]*x[3] - D[5]*x[0]*y[1] + D[5]*x[0]*y[3] + D[5]*x[2]*y[1] - D[5]*x[2]*y[3] - D[7]*x[1]*y[0] + D[7]*x[1]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[2] + D[8]*y[0]*y[1] - D[8]*y[0]*y[3] - D[8]*y[1]*y[2] + D[8]*y[2]*y[3] + eta*eta*(D[4]*x[0]*x[1] - D[4]*x[0]*x[2] - D[4]*x[1]*x[3] + D[4]*x[2]*x[3] - D[5]*x[1]*y[0] + D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[3] - D[7]*x[0]*y[1] + D[7]*x[0]*y[2] + D[7]*x[3]*y[1] - D[7]*x[3]*y[2] + D[8]*y[0]*y[1] - D[8]*y[0]*y[2] - D[8]*y[1]*y[3] + D[8]*y[2]*y[3]) - eta*xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + D[8]*y[0]*y[0] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3]) - eta*(-D[4]*x[0]*x[0] + D[4]*x[0]*x[2] + D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - 2*D[4]*x[2]*x[3] + D[5]*x[0]*y[0] - D[5]*x[0]*y[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] - D[5]*x[2]*y[0] - D[5]*x[2]*y[1] + 2*D[5]*x[2]*y[3] + D[7]*x[0]*y[0] - D[7]*x[0]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] - D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + 2*D[7]*x[3]*y[2] - D[8]*y[0]*y[0] + D[8]*y[0]*y[2] + D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3] - 2*D[8]*y[2]*y[3]) + xi*xi*(D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[1] + D[4]*x[1]*x[1] - D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[1]*y[0] - D[5]*x[1]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[1]*y[0] - D[7]*x[1]*y[1] + D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[1] + D[8]*y[1]*y[1]) - xi*(D[4]*x[0]*x[0] - D[4]*x[0]*x[2] - D[4]*x[0]*x[3] - D[4]*x[1]*x[1] + D[4]*x[1]*x[2] + D[4]*x[1]*x[3] - D[5]*x[0]*y[0] + D[5]*x[0]*y[3] + D[5]*x[1]*y[1] - D[5]*x[1]*y[3] + D[5]*x[2]*y[0] - D[5]*x[2]*y[1] - D[7]*x[0]*y[0] + D[7]*x[0]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] + D[7]*x[3]*y[0] - D[7]*x[3]*y[1] + D[8]*y[0]*y[0] - D[8]*y[0]*y[2] - D[8]*y[0]*y[3] - D[8]*y[1]*y[1] + D[8]*y[1]*y[2] + D[8]*y[1]*y[3]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(D[3]*x[0]*y[0] - D[3]*x[0]*y[2] - D[3]*x[2]*y[0] + D[3]*x[2]*y[2] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[2] - D[5]*x[2]*x[2] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[2] - D[6]*y[2]*y[2] + D[8]*x[0]*y[0] - D[8]*x[0]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[2] + eta*eta*(D[3]*x[1]*y[1] - D[3]*x[1]*y[2] - D[3]*x[2]*y[1] + D[3]*x[2]*y[2] - D[5]*x[1]*x[1] + 2*D[5]*x[1]*x[2] - D[5]*x[2]*x[2] - D[6]*y[1]*y[1] + 2*D[6]*y[1]*y[2] - D[6]*y[2]*y[2] + D[8]*x[1]*y[1] - D[8]*x[1]*y[2] - D[8]*x[2]*y[1] + D[8]*x[2]*y[2]) - eta*xi*(D[3]*x[0]*y[1] - D[3]*x[0]*y[2] + D[3]*x[1]*y[0] - 2*D[3]*x[1]*y[1] + D[3]*x[1]*y[2] - D[3]*x[2]*y[0] + D[3]*x[2]*y[1] - 2*D[5]*x[0]*x[1] + 2*D[5]*x[0]*x[2] + 2*D[5]*x[1]*x[1] - 2*D[5]*x[1]*x[2] - 2*D[6]*y[0]*y[1] + 2*D[6]*y[0]*y[2] + 2*D[6]*y[1]*y[1] - 2*D[6]*y[1]*y[2] + D[8]*x[0]*y[1] - D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - 2*D[8]*x[1]*y[1] + D[8]*x[1]*y[2] - D[8]*x[2]*y[0] + D[8]*x[2]*y[1]) - eta*(-D[3]*x[0]*y[1] + D[3]*x[0]*y[2] - D[3]*x[1]*y[0] + D[3]*x[1]*y[2] + D[3]*x[2]*y[0] + D[3]*x[2]*y[1] - 2*D[3]*x[2]*y[2] + 2*D[5]*x[0]*x[1] - 2*D[5]*x[0]*x[2] - 2*D[5]*x[1]*x[2] + 2*D[5]*x[2]*x[2] + 2*D[6]*y[0]*y[1] - 2*D[6]*y[0]*y[2] - 2*D[6]*y[1]*y[2] + 2*D[6]*y[2]*y[2] - D[8]*x[0]*y[1] + D[8]*x[0]*y[2] - D[8]*x[1]*y[0] + D[8]*x[1]*y[2] + D[8]*x[2]*y[0] + D[8]*x[2]*y[1] - 2*D[8]*x[2]*y[2]) + xi*xi*(D[3]*x[0]*y[0] - D[3]*x[0]*y[1] - D[3]*x[1]*y[0] + D[3]*x[1]*y[1] - D[5]*x[0]*x[0] + 2*D[5]*x[0]*x[1] - D[5]*x[1]*x[1] - D[6]*y[0]*y[0] + 2*D[6]*y[0]*y[1] - D[6]*y[1]*y[1] + D[8]*x[0]*y[0] - D[8]*x[0]*y[1] - D[8]*x[1]*y[0] + D[8]*x[1]*y[1]) + xi*(-2*D[3]*x[0]*y[0] + D[3]*x[0]*y[1] + D[3]*x[0]*y[2] + D[3]*x[1]*y[0] - D[3]*x[1]*y[2] + D[3]*x[2]*y[0] - D[3]*x[2]*y[1] + 2*D[5]*x[0]*x[0] - 2*D[5]*x[0]*x[1] - 2*D[5]*x[0]*x[2] + 2*D[5]*x[1]*x[2] + 2*D[6]*y[0]*y[0] - 2*D[6]*y[0]*y[1] - 2*D[6]*y[0]*y[2] + 2*D[6]*y[1]*y[2] - 2*D[8]*x[0]*y[0] + D[8]*x[0]*y[1] + D[8]*x[0]*y[2] + D[8]*x[1]*y[0] - D[8]*x[1]*y[2] + D[8]*x[2]*y[0] - D[8]*x[2]*y[1]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
,
t*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[2] - D[4]*x[2]*x[2] + D[5]*x[0]*y[0] - D[5]*x[0]*y[2] - D[5]*x[2]*y[0] + D[5]*x[2]*y[2] + D[7]*x[0]*y[0] - D[7]*x[0]*y[2] - D[7]*x[2]*y[0] + D[7]*x[2]*y[2] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[2] - D[8]*y[2]*y[2] + eta*eta*(-D[4]*x[1]*x[1] + 2*D[4]*x[1]*x[2] - D[4]*x[2]*x[2] + D[5]*x[1]*y[1] - D[5]*x[1]*y[2] - D[5]*x[2]*y[1] + D[5]*x[2]*y[2] + D[7]*x[1]*y[1] - D[7]*x[1]*y[2] - D[7]*x[2]*y[1] + D[7]*x[2]*y[2] - D[8]*y[1]*y[1] + 2*D[8]*y[1]*y[2] - D[8]*y[2]*y[2]) - eta*xi*(-2*D[4]*x[0]*x[1] + 2*D[4]*x[0]*x[2] + 2*D[4]*x[1]*x[1] - 2*D[4]*x[1]*x[2] + D[5]*x[0]*y[1] - D[5]*x[0]*y[2] + D[5]*x[1]*y[0] - 2*D[5]*x[1]*y[1] + D[5]*x[1]*y[2] - D[5]*x[2]*y[0] + D[5]*x[2]*y[1] + D[7]*x[0]*y[1] - D[7]*x[0]*y[2] + D[7]*x[1]*y[0] - 2*D[7]*x[1]*y[1] + D[7]*x[1]*y[2] - D[7]*x[2]*y[0] + D[7]*x[2]*y[1] - 2*D[8]*y[0]*y[1] + 2*D[8]*y[0]*y[2] + 2*D[8]*y[1]*y[1] - 2*D[8]*y[1]*y[2]) - eta*(2*D[4]*x[0]*x[1] - 2*D[4]*x[0]*x[2] - 2*D[4]*x[1]*x[2] + 2*D[4]*x[2]*x[2] - D[5]*x[0]*y[1] + D[5]*x[0]*y[2] - D[5]*x[1]*y[0] + D[5]*x[1]*y[2] + D[5]*x[2]*y[0] + D[5]*x[2]*y[1] - 2*D[5]*x[2]*y[2] - D[7]*x[0]*y[1] + D[7]*x[0]*y[2] - D[7]*x[1]*y[0] + D[7]*x[1]*y[2] + D[7]*x[2]*y[0] + D[7]*x[2]*y[1] - 2*D[7]*x[2]*y[2] + 2*D[8]*y[0]*y[1] - 2*D[8]*y[0]*y[2] - 2*D[8]*y[1]*y[2] + 2*D[8]*y[2]*y[2]) + xi*xi*(-D[4]*x[0]*x[0] + 2*D[4]*x[0]*x[1] - D[4]*x[1]*x[1] + D[5]*x[0]*y[0] - D[5]*x[0]*y[1] - D[5]*x[1]*y[0] + D[5]*x[1]*y[1] + D[7]*x[0]*y[0] - D[7]*x[0]*y[1] - D[7]*x[1]*y[0] + D[7]*x[1]*y[1] - D[8]*y[0]*y[0] + 2*D[8]*y[0]*y[1] - D[8]*y[1]*y[1]) + xi*(2*D[4]*x[0]*x[0] - 2*D[4]*x[0]*x[1] - 2*D[4]*x[0]*x[2] + 2*D[4]*x[1]*x[2] - 2*D[5]*x[0]*y[0] + D[5]*x[0]*y[1] + D[5]*x[0]*y[2] + D[5]*x[1]*y[0] - D[5]*x[1]*y[2] + D[5]*x[2]*y[0] - D[5]*x[2]*y[1] - 2*D[7]*x[0]*y[0] + D[7]*x[0]*y[1] + D[7]*x[0]*y[2] + D[7]*x[1]*y[0] - D[7]*x[1]*y[2] + D[7]*x[2]*y[0] - D[7]*x[2]*y[1] + 2*D[8]*y[0]*y[0] - 2*D[8]*y[0]*y[1] - 2*D[8]*y[0]*y[2] + 2*D[8]*y[1]*y[2]))/(8*(eta*(x[0]*y[1] - x[0]*y[2] - x[1]*y[0] + x[1]*y[3] + x[2]*y[0] - x[2]*y[3] - x[3]*y[1] + x[3]*y[2]) - x[0]*y[1] + x[0]*y[3] + x[1]*y[0] - x[1]*y[2] + x[2]*y[1] - x[2]*y[3] - x[3]*y[0] + x[3]*y[2] + xi*(x[0]*y[2] - x[0]*y[3] - x[1]*y[2] + x[1]*y[3] - x[2]*y[0] + x[2]*y[1] + x[3]*y[0] - x[3]*y[1])))
};


    return k;
}
std::vector<double> Q4::get_phi_radial(const double t, const double beta, const double vp, const std::vector<double>& axis, const std::vector<double>& center, const double rho) const{
    logger::log_assert(false, logger::ERROR, "phi not implemented for Q4");
    return std::vector<double>();
}
std::vector<double> Q4::get_phi_grad(const double t, const double beta) const{
    logger::log_assert(false, logger::ERROR, "phi not implemented for Q4");
    return std::vector<double>();
}
std::vector<double> Q4::get_phi_unidirectional(const double t, const double beta, const double l, const std::vector<double>& v, const double vn) const{
    logger::log_assert(false, logger::ERROR, "phi not implemented for Q4");
    return std::vector<double>();
}

std::vector<double> Q4::helmholtz_vector(const double t) const{
    const double V = this->get_volume(t);
    const double N = V/4;

    return std::vector<double>(4, N);
}

std::vector<double> Q4::helmholtz_tensor(const double r, const double t) const{
    constexpr size_t N = Q4::NODES_PER_ELEM;
    std::array<double, N> x, y;
    // Node ordering is important in this case, so we need to use the same
    // ordering that Gmsh uses, as it's the same one that is used for the
    // calculations too.
    //
    // Otherwise, the global matrix will have a ton of zeros.
    for(size_t i = 0; i < N; ++i){
        x[i] = this->nodes[i]->point.X();
        y[i] = this->nodes[i]->point.Y();
    }

    const double p = std::sqrt(3.0)/3.0;

    const auto h0 = this->get_h_base(r, t,  p,  p, x, y);
    const auto h1 = this->get_h_base(r, t,  p, -p, x, y);
    const auto h2 = this->get_h_base(r, t, -p, -p, x, y);
    const auto h3 = this->get_h_base(r, t, -p,  p, x, y);

    // Afterwards, we need to get the matrix into a sorted-by-id composition,
    // which can easily be node in a way analogous to how the global matrix
    // K is formed.
    std::vector<double> h(Q4::K_DIM*Q4::K_DIM);
    for(size_t i = 0; i < Q4::K_DIM*Q4::K_DIM; ++i){
        h[i] = h0[i]+h1[i]+h2[i]+h3[i];
    }

    return h;
}

std::vector<double> Q4::get_nodal_density_gradient(gp_Pnt p) const{
    (void)p;
    const size_t N = this->NODES_PER_ELEM;

    const double* const a = this->coeffs.data();
    const double* const b = a + N;
    const double* const c = b + N;
    const double* const d = c + N;

    const double x = p.X();
    const double y = p.Y();

    return std::vector<double>{b[0] + d[0]*y, b[1] + d[1]*y, b[2] + d[2]*y, b[3] + d[3]*y,
                               c[0] + d[0]*x, c[1] + d[1]*x, c[2] + d[2]*x, c[3] + d[3]*x};
}

std::vector<double> Q4::get_h_base(const double r, const double t, const double xi, const double eta, 
                                   const std::array<double, NODES_PER_ELEM>& x, const std::array<double, NODES_PER_ELEM>& y) const{
    const size_t N = NODES_PER_ELEM;

    auto J = this->get_J_base(xi, eta, x, y);
    const double detJ = this->get_detJ_base(xi, eta, x, y);
    auto dN = this->get_dN_base(xi, eta);
    std::vector<double> JdN(dN.size()*2,0);
    std::vector<int> ipiv(2);
    LAPACKE_dgesv(LAPACK_ROW_MAJOR, 2, 4, J.data(), 2, ipiv.data(), dN.data(), 4);

    std::vector<double> h1(N*N,0);
    cblas_dsyrk(CblasRowMajor, CblasLower, CblasTrans, 4, 2, r*r*t*detJ, JdN.data(), 4, 0, h1.data(), 4);
    const auto h2 = this->get_h2_base(t, xi, eta, x, y);
    std::vector<double> h(N*N);
    for(size_t i = 0; i < N; ++i){
        for(size_t j = 0; j <= i; ++j){
            h[i*N + j] = h1[i*N + j]+h2[i*N + j];
        }
        for(size_t j = i+1; j < N; ++j){
            h[i*N + j] = h1[j*N + i]+h2[i*N + j];
        }
    }
    
    return h;
}

std::vector<double> Q4::get_J_base(const double xi, const double eta, 
                                   const std::array<double, NODES_PER_ELEM>& x, const std::array<double, NODES_PER_ELEM>& y) const{
    std::vector<double> J{
    eta*x[0]/4 - eta*x[1]/4 + eta*x[2]/4 - eta*x[3]/4 - x[0]/4 + x[1]/4 + x[2]/4 - x[3]/4
    ,
    eta*y[0]/4 - eta*y[1]/4 + eta*y[2]/4 - eta*y[3]/4 - y[0]/4 + y[1]/4 + y[2]/4 - y[3]/4
    ,
    x[0]*xi/4 - x[0]/4 - x[1]*xi/4 - x[1]/4 + x[2]*xi/4 + x[2]/4 - x[3]*xi/4 + x[3]/4
    ,
    xi*y[0]/4 - xi*y[1]/4 + xi*y[2]/4 - xi*y[3]/4 - y[0]/4 - y[1]/4 + y[2]/4 + y[3]/4
    };
    return J;
}

double Q4::get_detJ_base(const double xi, const double eta, 
                         const std::array<double, NODES_PER_ELEM>& x, const std::array<double, NODES_PER_ELEM>& y) const{
    const double detJ = 
-eta*x[0]*y[1]/8 + eta*x[0]*y[2]/8 + eta*x[1]*y[0]/8 - eta*x[1]*y[3]/8 - eta*x[2]*y[0]/8 + eta*x[2]*y[3]/8 + eta*x[3]*y[1]/8 - eta*x[3]*y[2]/8 - x[0]*xi*y[2]/8 + x[0]*xi*y[3]/8 + x[0]*y[1]/8 - x[0]*y[3]/8 + x[1]*xi*y[2]/8 - x[1]*xi*y[3]/8 - x[1]*y[0]/8 + x[1]*y[2]/8 + x[2]*xi*y[0]/8 - x[2]*xi*y[1]/8 - x[2]*y[1]/8 + x[2]*y[3]/8 - x[3]*xi*y[0]/8 + x[3]*xi*y[1]/8 + x[3]*y[0]/8 - x[3]*y[2]/8;

    return detJ;
}

std::vector<double> Q4::get_dN_base(const double xi, const double eta) const{
    std::vector<double> dN{
    eta/4 - 1.0/4
    ,
    1.0/4 - eta/4
    ,
    eta/4 + 1.0/4
    ,
    -eta/4 - 1.0/4
    ,
    xi/4 - 1.0/4
    ,
    -xi/4 - 1.0/4
    ,
    xi/4 + 1.0/4
    ,
    1.0/4 - xi/4
    };
    return dN;
}

std::vector<double> Q4::get_h2_base(const double t, const double xi, const double eta, 
                                        const std::array<double, NODES_PER_ELEM>& x, const std::array<double, NODES_PER_ELEM>& y) const{
    std::vector<double> h2{
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + 2*eta*eta*eta*x[0]*xi*y[1] - 2*eta*eta*eta*x[0]*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*eta*x[1]*xi*y[0] + 2*eta*eta*eta*x[1]*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + 2*eta*eta*eta*x[2]*xi*y[0] - 2*eta*eta*eta*x[2]*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - 2*eta*eta*eta*x[3]*xi*y[1] + 2*eta*eta*eta*x[3]*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + 3*eta*eta*x[0]*xi*xi*y[1] - 3*eta*eta*x[0]*xi*xi*y[3] - 6*eta*eta*x[0]*xi*y[1] + 3*eta*eta*x[0]*xi*y[2] + 3*eta*eta*x[0]*xi*y[3] + 3*eta*eta*x[0]*y[1] - 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - 3*eta*eta*x[1]*xi*xi*y[0] - eta*eta*x[1]*xi*xi*y[2] + 4*eta*eta*x[1]*xi*xi*y[3] + 6*eta*eta*x[1]*xi*y[0] - eta*eta*x[1]*xi*y[2] - 5*eta*eta*x[1]*xi*y[3] - 3*eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] + 2*eta*eta*x[1]*y[3] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] - 3*eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] + 2*eta*eta*x[2]*xi*y[3] + 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + 3*eta*eta*x[3]*xi*xi*y[0] -4*eta*eta*x[3]*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[2] - 3*eta*eta*x[3]*xi*y[0] + 5*eta*eta*x[3]*xi*y[1] - 2*eta*eta*x[3]*xi*y[2] + eta*eta*x[3]*y[0] - 2*eta*eta*x[3]*y[1] + eta*eta*x[3]*y[2] +2*eta*x[0]*xi*xi*xi*y[2] - 2*eta*x[0]*xi*xi*xi*y[3] - 3*eta*x[0]*xi*xi*y[1] - 3*eta*x[0]*xi*xi*y[2] + 6*eta*x[0]*xi*xi*y[3] + 6*eta*x[0]*xi*y[1] - 6*eta*x[0]*xi*y[3] - 3*eta*x[0]*y[1] + eta*x[0]*y[2] + 2*eta*x[0]*y[3] - 2*eta*x[1]*xi*xi*xi*y[2] + 2*eta*x[1]*xi*xi*xi*y[3] + 3*eta*x[1]*xi*xi*y[0] + 2*eta*x[1]*xi*xi*y[2] - 5*eta*x[1]*xi*xi*y[3] - 6*eta*x[1]*xi*y[0] + 2*eta*x[1]*xi*y[2] + 4*eta*x[1]*xi*y[3] + 3*eta*x[1]*y[0] - 2*eta*x[1]*y[2] - eta*x[1]*y[3] - 2*eta*x[2]*xi*xi*xi*y[0] + 2*eta*x[2]*xi*xi*xi*y[1] + 3*eta*x[2]*xi*xi*y[0] - 2*eta*x[2]*xi*xi*y[1] - eta*x[2]*xi*xi*y[3] - 2*eta*x[2]*xi*y[1] + 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + 2*eta*x[2]*y[1] - eta*x[2]*y[3] + 2*eta*x[3]*xi*xi*xi*y[0] - 2*eta*x[3]*xi*xi*xi*y[1] - 6*eta*x[3]*xi*xi*y[0] + 5*eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] + 6*eta*x[3]*xi*y[0] - 4*eta*x[3]*xi*y[1] - 2*eta*x[3]*xi*y[2] - 2*eta*x[3]*y[0] + eta*x[3]*y[1] + eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] + 2*x[0]*xi*xi*y[2] - 3*x[0]*xi*xi*y[3] - 2*x[0]*xi*y[1] - x[0]*xi*y[2] + 3*x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + 2*x[1]*xi*xi*y[3] + 2*x[1]*xi*y[0] - x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] - 2*x[2]*xi*xi*y[0] + x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] + x[2]*xi*y[1] - 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] + 3*x[3]*xi*xi*y[0] - 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] - 3*x[3]*xi*y[0] + x[3]*xi*y[1] + 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - 3*eta*eta*x[0]*xi*xi*y[1] + 2*eta*eta*x[0]*xi*xi*y[2] + eta*eta*x[0]*xi*xi*y[3] - eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] + 3*eta*eta*x[0]*y[1] - 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + 3*eta*eta*x[1]*xi*xi*y[0] - eta*eta*x[1]*xi*xi*y[2] - 2*eta*eta*x[1]*xi*xi*y[3] + eta*eta*x[1]*xi*y[2] - eta*eta*x[1]*xi*y[3] - 3*eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] + 2*eta*eta*x[1]*y[3] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] - 2*eta*eta*x[2]*xi*xi*y[0] + eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] + eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] + 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] + 2*eta*eta*x[3]*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0] + eta*eta*x[3]*xi*y[1] + eta*eta*x[3]*y[0] - 2*eta*eta*x[3]*y[1] + eta*eta*x[3]*y[2] - 2*eta*x[0]*xi*xi*xi*y[2] + 2*eta*x[0]*xi*xi*xi*y[3] + 3*eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - 2*eta*x[0]*xi*xi*y[3] + 2*eta*x[0]*xi*y[2] - 2*eta*x[0]*xi*y[3] - 3*eta*x[0]*y[1] + eta*x[0]*y[2] + 2*eta*x[0]*y[3] + 2*eta*x[1]*xi*xi*xi*y[2] - 2*eta*x[1]*xi*xi*xi*y[3] - 3*eta*x[1]*xi*xi*y[0] + 2*eta*x[1]*xi*xi*y[2] + eta*x[1]*xi*xi*y[3] - 2*eta*x[1]*xi*y[2] + 2*eta*x[1]*xi*y[3] + 3*eta*x[1]*y[0] - 2*eta*x[1]*y[2] - eta*x[1]*y[3] + 2*eta*x[2]*xi*xi*xi*y[0] - 2*eta*x[2]*xi*xi*xi*y[1] + eta*x[2]*xi*xi*y[0] - 2*eta*x[2]*xi*xi*y[1] + eta*x[2]*xi*xi*y[3] - 2*eta*x[2]*xi*y[0] + 2*eta*x[2]*xi*y[1] - eta*x[2]*y[0] + 2*eta*x[2]*y[1] - eta*x[2]*y[3] - 2*eta*x[3]*xi*xi*xi*y[0]+ 2*eta*x[3]*xi*xi*xi*y[1] + 2*eta*x[3]*xi*xi*y[0] - eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] + 2*eta*x[3]*xi*y[0] - 2*eta*x[3]*xi*y[1] - 2*eta*x[3]*y[0] + eta*x[3]*y[1] + eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] +x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - eta*eta*x[0]*xi*xi*y[3] + eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - eta*eta*x[1]*xi*y[2] +eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] - eta*eta*x[1]*y[2] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] + eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] - eta*x[1]*xi*xi*y[0] + eta*x[1]*xi*xi*y[3]+ eta*x[1]*y[0] - eta*x[1]*y[3] + eta*x[2]*xi*xi*y[0] - eta*x[2]*xi*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] - eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] + x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - 2*eta*eta*eta*x[0]*xi*y[1] + 2*eta*eta*eta*x[0]*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*eta*x[1]*xi*y[0] - 2*eta*eta*eta*x[1]*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - 2*eta*eta*eta*x[2]*xi*y[0] + 2*eta*eta*eta*x[2]*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + 2*eta*eta*eta*x[3]*xi*y[1] - 2*eta*eta*eta*x[3]*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] - 2*eta*eta*x[0]*xi*xi*y[2] + 3*eta*eta*x[0]*xi*xi*y[3] + 2*eta*eta*x[0]*xi*y[1] + eta*eta*x[0]*xi*y[2] - 3*eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - 2*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*x[1]*xi*y[0] + eta*eta*x[1]*xi*y[2] + eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0]- eta*eta*x[1]*y[2] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] + 2*eta*eta*x[2]*xi*xi*y[0] - eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] + 2*eta*eta*x[2]*xi*y[3] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - 3*eta*eta*x[3]*xi*xi*y[0] + 2*eta*eta*x[3]*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[2] + 3*eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - 2*eta*eta*x[3]*xi*y[2] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] - eta*x[0]*xi*xi*y[1] + eta*x[0]*xi*xi*y[2] + 2*eta*x[0]*xi*y[1] - 2*eta*x[0]*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] + eta*x[1]*xi*xi*y[0] - eta*x[1]*xi*xi*y[3] - 2*eta*x[1]*xi*y[0] + 2*eta*x[1]*xi*y[3] + eta*x[1]*y[0] - eta*x[1]*y[3] - eta*x[2]*xi*xi*y[0] + eta*x[2]*xi*xi*y[3] + 2*eta*x[2]*xi*y[0] - 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] + eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] - 2*eta*x[3]*xi*y[1] + 2*eta*x[3]*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] + 2*x[0]*xi*xi*y[2] - 3*x[0]*xi*xi*y[3] - 2*x[0]*xi*y[1] - x[0]*xi*y[2] + 3*x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + 2*x[1]*xi*xi*y[3] + 2*x[1]*xi*y[0] - x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] - 2*x[2]*xi*xi*y[0] + x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] + x[2]*xi*y[1] - 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] +x[3]*xi*xi*xi*y[1] + 3*x[3]*xi*xi*y[0] - 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] - 3*x[3]*xi*y[0] + x[3]*xi*y[1] + 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - 3*eta*eta*x[0]*xi*xi*y[1] + 2*eta*eta*x[0]*xi*xi*y[2] + eta*eta*x[0]*xi*xi*y[3] - eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] + 3*eta*eta*x[0]*y[1] - 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + 3*eta*eta*x[1]*xi*xi*y[0] - eta*eta*x[1]*xi*xi*y[2] - 2*eta*eta*x[1]*xi*xi*y[3] + eta*eta*x[1]*xi*y[2] - eta*eta*x[1]*xi*y[3] - 3*eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] + 2*eta*eta*x[1]*y[3] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] - 2*eta*eta*x[2]*xi*xi*y[0] + eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] + eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] + 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] + 2*eta*eta*x[3]*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0] + eta*eta*x[3]*xi*y[1] + eta*eta*x[3]*y[0] - 2*eta*eta*x[3]*y[1] + eta*eta*x[3]*y[2] - 2*eta*x[0]*xi*xi*xi*y[2] + 2*eta*x[0]*xi*xi*xi*y[3] + 3*eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - 2*eta*x[0]*xi*xi*y[3] + 2*eta*x[0]*xi*y[2] - 2*eta*x[0]*xi*y[3] - 3*eta*x[0]*y[1] + eta*x[0]*y[2] + 2*eta*x[0]*y[3] + 2*eta*x[1]*xi*xi*xi*y[2] - 2*eta*x[1]*xi*xi*xi*y[3] - 3*eta*x[1]*xi*xi*y[0] + 2*eta*x[1]*xi*xi*y[2] + eta*x[1]*xi*xi*y[3] - 2*eta*x[1]*xi*y[2] + 2*eta*x[1]*xi*y[3] + 3*eta*x[1]*y[0] - 2*eta*x[1]*y[2] - eta*x[1]*y[3] + 2*eta*x[2]*xi*xi*xi*y[0] - 2*eta*x[2]*xi*xi*xi*y[1] + eta*x[2]*xi*xi*y[0] - 2*eta*x[2]*xi*xi*y[1] + eta*x[2]*xi*xi*y[3] - 2*eta*x[2]*xi*y[0] + 2*eta*x[2]*xi*y[1] - eta*x[2]*y[0] + 2*eta*x[2]*y[1] - eta*x[2]*y[3] - 2*eta*x[3]*xi*xi*xi*y[0]+ 2*eta*x[3]*xi*xi*xi*y[1] + 2*eta*x[3]*xi*xi*y[0] - eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] + 2*eta*x[3]*xi*y[0] - 2*eta*x[3]*xi*y[1] - 2*eta*x[3]*y[0] + eta*x[3]*y[1] + eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] +x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] - 2*eta*eta*eta*x[0]*xi*y[1] + 2*eta*eta*eta*x[0]*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*eta*x[1]*xi*y[0] - 2*eta*eta*eta*x[1]*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] - 2*eta*eta*eta*x[2]*xi*y[0] + 2*eta*eta*eta*x[2]*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] + 2*eta*eta*eta*x[3]*xi*y[1] - 2*eta*eta*eta*x[3]*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + 3*eta*eta*x[0]*xi*xi*y[1] - 4*eta*eta*x[0]*xi*xi*y[2] + eta*eta*x[0]*xi*xi*y[3] + 6*eta*eta*x[0]*xi*y[1] - 5*eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] + 3*eta*eta*x[0]*y[1] - 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - 3*eta*eta*x[1]*xi*xi*y[0] + 3*eta*eta*x[1]*xi*xi*y[2] - 6*eta*eta*x[1]*xi*y[0] + 3*eta*eta*x[1]*xi*y[2] + 3*eta*eta*x[1]*xi*y[3] - 3*eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] + 2*eta*eta*x[1]*y[3] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] + 4*eta*eta*x[2]*xi*xi*y[0] - 3*eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] +5*eta*eta*x[2]*xi*y[0] - 3*eta*eta*x[2]*xi*y[1] - 2*eta*eta*x[2]*xi*y[3] + 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] + eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] - 3*eta*eta*x[3]*xi*y[1] + 2*eta*eta*x[3]*xi*y[2] + eta*eta*x[3]*y[0] - 2*eta*eta*x[3]*y[1] + eta*eta*x[3]*y[2] +2*eta*x[0]*xi*xi*xi*y[2] - 2*eta*x[0]*xi*xi*xi*y[3] - 3*eta*x[0]*xi*xi*y[1] + 5*eta*x[0]*xi*xi*y[2] - 2*eta*x[0]*xi*xi*y[3] - 6*eta*x[0]*xi*y[1] + 4*eta*x[0]*xi*y[2] + 2*eta*x[0]*xi*y[3] - 3*eta*x[0]*y[1] + eta*x[0]*y[2] + 2*eta*x[0]*y[3] - 2*eta*x[1]*xi*xi*xi*y[2] + 2*eta*x[1]*xi*xi*xi*y[3] + 3*eta*x[1]*xi*xi*y[0] - 6*eta*x[1]*xi*xi*y[2] + 3*eta*x[1]*xi*xi*y[3] + 6*eta*x[1]*xi*y[0] - 6*eta*x[1]*xi*y[2] + 3*eta*x[1]*y[0] - 2*eta*x[1]*y[2] - eta*x[1]*y[3] - 2*eta*x[2]*xi*xi*xi*y[0] + 2*eta*x[2]*xi*xi*xi*y[1] - 5*eta*x[2]*xi*xi*y[0] + 6*eta*x[2]*xi*xi*y[1] - eta*x[2]*xi*xi*y[3] - 4*eta*x[2]*xi*y[0] + 6*eta*x[2]*xi*y[1] - 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + 2*eta*x[2]*y[1] - eta*x[2]*y[3] + 2*eta*x[3]*xi*xi*xi*y[0] - 2*eta*x[3]*xi*xi*xi*y[1] + 2*eta*x[3]*xi*xi*y[0] - 3*eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] - 2*eta*x[3]*xi*y[0] + 2*eta*x[3]*xi*y[2] - 2*eta*x[3]*y[0] + eta*x[3]*y[1] + eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] - 2*x[0]*xi*xi*y[2] + x[0]*xi*xi*y[3] + 2*x[0]*xi*y[1] - x[0]*xi*y[2] - x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] + 3*x[1]*xi*xi*y[2] - 2*x[1]*xi*xi*y[3] - 2*x[1]*xi*y[0] + 3*x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] + 2*x[2]*xi*xi*y[0] - 3*x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] - 3*x[2]*xi*y[1] + 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] + x[3]*xi*y[0] + x[3]*xi*y[1] - 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] + 2*eta*eta*eta*x[0]*xi*y[1] - 2*eta*eta*eta*x[0]*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*eta*x[1]*xi*y[0] + 2*eta*eta*eta*x[1]*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] + 2*eta*eta*eta*x[2]*xi*y[0] - 2*eta*eta*eta*x[2]*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] - 2*eta*eta*eta*x[3]*xi*y[1] + 2*eta*eta*eta*x[3]*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] + 2*eta*eta*x[0]*xi*xi*y[2] - eta*eta*x[0]*xi*xi*y[3] - 2*eta*eta*x[0]*xi*y[1] + eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] - 3*eta*eta*x[1]*xi*xi*y[2] + 2*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*x[1]*xi*y[0] - 3*eta*eta*x[1]*xi*y[2] + eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0]- eta*eta*x[1]*y[2] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] - 2*eta*eta*x[2]*xi*xi*y[0] + 3*eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + 3*eta*eta*x[2]*xi*y[1] - 2*eta*eta*x[2]*xi*y[3] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - 2*eta*eta*x[3]*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] + 2*eta*eta*x[3]*xi*y[2] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] - eta*x[0]*xi*xi*y[1] + eta*x[0]*xi*xi*y[2] - 2*eta*x[0]*xi*y[1] + 2*eta*x[0]*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] + eta*x[1]*xi*xi*y[0] - eta*x[1]*xi*xi*y[3] + 2*eta*x[1]*xi*y[0] - 2*eta*x[1]*xi*y[3] + eta*x[1]*y[0] - eta*x[1]*y[3] - eta*x[2]*xi*xi*y[0] + eta*x[2]*xi*xi*y[3] - 2*eta*x[2]*xi*y[0] + 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] + eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] + 2*eta*x[3]*xi*y[1] - 2*eta*x[3]*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] - 2*x[0]*xi*xi*y[2] + x[0]*xi*xi*y[3] + 2*x[0]*xi*y[1] - x[0]*xi*y[2] - x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] + 3*x[1]*xi*xi*y[2] - 2*x[1]*xi*xi*y[3] - 2*x[1]*xi*y[0] + 3*x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] + 2*x[2]*xi*xi*y[0] - 3*x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] - 3*x[2]*xi*y[1] + 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] + x[3]*xi*y[0] + x[3]*xi*y[1] - 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - eta*eta*x[0]*xi*xi*y[3] + eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - eta*eta*x[1]*xi*y[2] +eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] - eta*eta*x[1]*y[2] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] + eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] - eta*x[1]*xi*xi*y[0] + eta*x[1]*xi*xi*y[3]+ eta*x[1]*y[0] - eta*x[1]*y[3] + eta*x[2]*xi*xi*y[0] - eta*x[2]*xi*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] - eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] + x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - eta*eta*x[0]*xi*xi*y[3] + eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - eta*eta*x[1]*xi*y[2] +eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] - eta*eta*x[1]*y[2] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] + eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] - eta*x[1]*xi*xi*y[0] + eta*x[1]*xi*xi*y[3]+ eta*x[1]*y[0] - eta*x[1]*y[3] + eta*x[2]*xi*xi*y[0] - eta*x[2]*xi*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] - eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] + x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] + 2*eta*eta*eta*x[0]*xi*y[1] - 2*eta*eta*eta*x[0]*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*eta*x[1]*xi*y[0] + 2*eta*eta*eta*x[1]*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] + 2*eta*eta*eta*x[2]*xi*y[0] - 2*eta*eta*eta*x[2]*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] - 2*eta*eta*eta*x[3]*xi*y[1] + 2*eta*eta*eta*x[3]*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] + 2*eta*eta*x[0]*xi*xi*y[2] - eta*eta*x[0]*xi*xi*y[3] - 2*eta*eta*x[0]*xi*y[1] + eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] - 3*eta*eta*x[1]*xi*xi*y[2] + 2*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*x[1]*xi*y[0] - 3*eta*eta*x[1]*xi*y[2] + eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0]- eta*eta*x[1]*y[2] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] - 2*eta*eta*x[2]*xi*xi*y[0] + 3*eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + 3*eta*eta*x[2]*xi*y[1] - 2*eta*eta*x[2]*xi*y[3] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - 2*eta*eta*x[3]*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] + 2*eta*eta*x[3]*xi*y[2] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] - eta*x[0]*xi*xi*y[1] + eta*x[0]*xi*xi*y[2] - 2*eta*x[0]*xi*y[1] + 2*eta*x[0]*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] + eta*x[1]*xi*xi*y[0] - eta*x[1]*xi*xi*y[3] + 2*eta*x[1]*xi*y[0] - 2*eta*x[1]*xi*y[3] + eta*x[1]*y[0] - eta*x[1]*y[3] - eta*x[2]*xi*xi*y[0] + eta*x[2]*xi*xi*y[3] - 2*eta*x[2]*xi*y[0] + 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] + eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] + 2*eta*x[3]*xi*y[1] - 2*eta*x[3]*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] - 2*x[0]*xi*xi*y[2] + x[0]*xi*xi*y[3] + 2*x[0]*xi*y[1] - x[0]*xi*y[2] - x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] + 3*x[1]*xi*xi*y[2] - 2*x[1]*xi*xi*y[3] - 2*x[1]*xi*y[0] + 3*x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] + 2*x[2]*xi*xi*y[0] - 3*x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] - 3*x[2]*xi*y[1] + 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] + x[3]*xi*y[0] + x[3]*xi*y[1] - 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] - 2*eta*eta*eta*x[0]*xi*y[1] + 2*eta*eta*eta*x[0]*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*eta*x[1]*xi*y[0] - 2*eta*eta*eta*x[1]*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] - 2*eta*eta*eta*x[2]*xi*y[0] + 2*eta*eta*eta*x[2]*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] + 2*eta*eta*eta*x[3]*xi*y[1] - 2*eta*eta*eta*x[3]*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] + eta*eta*x[0]*xi*xi*y[3] - 2*eta*eta*x[0]*xi*y[1] + 3*eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] + 3*eta*eta*x[1]*xi*xi*y[2] - 4*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*x[1]*xi*y[0] + 3*eta*eta*x[1]*xi*y[2] - 5*eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] - 2*eta*eta*x[1]*y[3] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - 3*eta*eta*x[2]*xi*xi*y[1] + 3*eta*eta*x[2]*xi*xi*y[3] - 3*eta*eta*x[2]*xi*y[0] - 3*eta*eta*x[2]*xi*y[1] + 6*eta*eta*x[2]*xi*y[3] - 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] + 3*eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] + 4*eta*eta*x[3]*xi*xi*y[1] - 3*eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] + 5*eta*eta*x[3]*xi*y[1] - 6*eta*eta*x[3]*xi*y[2] + eta*eta*x[3]*y[0] + 2*eta*eta*x[3]*y[1] - 3*eta*eta*x[3]*y[2] -2*eta*x[0]*xi*xi*xi*y[2] + 2*eta*x[0]*xi*xi*xi*y[3] + eta*x[0]*xi*xi*y[1] - 3*eta*x[0]*xi*xi*y[2] + 2*eta*x[0]*xi*xi*y[3] + 2*eta*x[0]*xi*y[1] - 2*eta*x[0]*xi*y[3] + eta*x[0]*y[1] + eta*x[0]*y[2] - 2*eta*x[0]*y[3] + 2*eta*x[1]*xi*xi*xi*y[2] - 2*eta*x[1]*xi*xi*xi*y[3] - eta*x[1]*xi*xi*y[0] + 6*eta*x[1]*xi*xi*y[2] - 5*eta*x[1]*xi*xi*y[3] - 2*eta*x[1]*xi*y[0] + 6*eta*x[1]*xi*y[2] -4*eta*x[1]*xi*y[3] - eta*x[1]*y[0] + 2*eta*x[1]*y[2] - eta*x[1]*y[3] + 2*eta*x[2]*xi*xi*xi*y[0] - 2*eta*x[2]*xi*xi*xi*y[1] + 3*eta*x[2]*xi*xi*y[0] - 6*eta*x[2]*xi*xi*y[1] + 3*eta*x[2]*xi*xi*y[3] - 6*eta*x[2]*xi*y[1] + 6*eta*x[2]*xi*y[3] - eta*x[2]*y[0] - 2*eta*x[2]*y[1] + 3*eta*x[2]*y[3] - 2*eta*x[3]*xi*xi*xi*y[0] + 2*eta*x[3]*xi*xi*xi*y[1] - 2*eta*x[3]*xi*xi*y[0] + 5*eta*x[3]*xi*xi*y[1] - 3*eta*x[3]*xi*xi*y[2] + 2*eta*x[3]*xi*y[0] + 4*eta*x[3]*xi*y[1] - 6*eta*x[3]*xi*y[2] + 2*eta*x[3]*y[0] + eta*x[3]*y[1] - 3*eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] - 2*x[0]*xi*xi*y[2] + x[0]*xi*xi*y[3] + 2*x[0]*xi*y[1] - x[0]*xi*y[2] - x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] + 3*x[1]*xi*xi*y[2] - 2*x[1]*xi*xi*y[3] - 2*x[1]*xi*y[0] + 3*x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] + 2*x[2]*xi*xi*y[0] - 3*x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] - 3*x[2]*xi*y[1] + 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] + x[3]*xi*y[0] + x[3]*xi*y[1] - 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - 2*eta*eta*x[0]*xi*xi*y[2] + eta*eta*x[0]*xi*xi*y[3] - eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] -eta*eta*x[1]*xi*xi*y[2] + 2*eta*eta*x[1]*xi*xi*y[3] + eta*eta*x[1]*xi*y[2] - eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] - 2*eta*eta*x[1]*y[3] - eta*eta*x[2]*xi*xi*xi*y[0] +eta*eta*x[2]*xi*xi*xi*y[1] + 2*eta*eta*x[2]*xi*xi*y[0] + eta*eta*x[2]*xi*xi*y[1] - 3*eta*eta*x[2]*xi*xi*y[3] + eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] - 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] + 3*eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] - 2*eta*eta*x[3]*xi*xi*y[1] + 3*eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0]+ eta*eta*x[3]*xi*y[1] + eta*eta*x[3]*y[0] + 2*eta*eta*x[3]*y[1] - 3*eta*eta*x[3]*y[2] + 2*eta*x[0]*xi*xi*xi*y[2] - 2*eta*x[0]*xi*xi*xi*y[3] - eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] + 2*eta*x[0]*xi*xi*y[3] - 2*eta*x[0]*xi*y[2] + 2*eta*x[0]*xi*y[3] + eta*x[0]*y[1] + eta*x[0]*y[2] - 2*eta*x[0]*y[3] - 2*eta*x[1]*xi*xi*xi*y[2] + 2*eta*x[1]*xi*xi*xi*y[3] + eta*x[1]*xi*xi*y[0] - 2*eta*x[1]*xi*xi*y[2] + eta*x[1]*xi*xi*y[3] + 2*eta*x[1]*xi*y[2] - 2*eta*x[1]*xi*y[3] - eta*x[1]*y[0] + 2*eta*x[1]*y[2] - eta*x[1]*y[3] - 2*eta*x[2]*xi*xi*xi*y[0] + 2*eta*x[2]*xi*xi*xi*y[1] + eta*x[2]*xi*xi*y[0] + 2*eta*x[2]*xi*xi*y[1] - 3*eta*x[2]*xi*xi*y[3] + 2*eta*x[2]*xi*y[0] - 2*eta*x[2]*xi*y[1] - eta*x[2]*y[0] - 2*eta*x[2]*y[1] + 3*eta*x[2]*y[3] + 2*eta*x[3]*xi*xi*xi*y[0] - 2*eta*x[3]*xi*xi*xi*y[1] - 2*eta*x[3]*xi*xi*y[0] - eta*x[3]*xi*xi*y[1] + 3*eta*x[3]*xi*xi*y[2] - 2*eta*x[3]*xi*y[0] + 2*eta*x[3]*xi*y[1] + 2*eta*x[3]*y[0] + eta*x[3]*y[1] - 3*eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] +x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - 2*eta*eta*eta*x[0]*xi*y[1] + 2*eta*eta*eta*x[0]*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + 2*eta*eta*eta*x[1]*xi*y[0] - 2*eta*eta*eta*x[1]*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - 2*eta*eta*eta*x[2]*xi*y[0] + 2*eta*eta*eta*x[2]*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + 2*eta*eta*eta*x[3]*xi*y[1] - 2*eta*eta*eta*x[3]*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] - 2*eta*eta*x[0]*xi*xi*y[2] + 3*eta*eta*x[0]*xi*xi*y[3] + 2*eta*eta*x[0]*xi*y[1] + eta*eta*x[0]*xi*y[2] - 3*eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - 2*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*x[1]*xi*y[0] + eta*eta*x[1]*xi*y[2] + eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0]- eta*eta*x[1]*y[2] - eta*eta*x[2]*xi*xi*xi*y[0] + eta*eta*x[2]*xi*xi*xi*y[1] + 2*eta*eta*x[2]*xi*xi*y[0] - eta*eta*x[2]*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] + 2*eta*eta*x[2]*xi*y[3] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - 3*eta*eta*x[3]*xi*xi*y[0] + 2*eta*eta*x[3]*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[2] + 3*eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - 2*eta*eta*x[3]*xi*y[2] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] - eta*x[0]*xi*xi*y[1] + eta*x[0]*xi*xi*y[2] + 2*eta*x[0]*xi*y[1] - 2*eta*x[0]*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] + eta*x[1]*xi*xi*y[0] - eta*x[1]*xi*xi*y[3] - 2*eta*x[1]*xi*y[0] + 2*eta*x[1]*xi*y[3] + eta*x[1]*y[0] - eta*x[1]*y[3] - eta*x[2]*xi*xi*y[0] + eta*x[2]*xi*xi*y[3] + 2*eta*x[2]*xi*y[0] - 2*eta*x[2]*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] + eta*x[3]*xi*xi*y[1] - eta*x[3]*xi*xi*y[2] - 2*eta*x[3]*xi*y[1] + 2*eta*x[3]*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] + 2*x[0]*xi*xi*y[2] - 3*x[0]*xi*xi*y[3] - 2*x[0]*xi*y[1] - x[0]*xi*y[2] + 3*x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + 2*x[1]*xi*xi*y[3] + 2*x[1]*xi*y[0] - x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] - 2*x[2]*xi*xi*y[0] + x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] + x[2]*xi*y[1] - 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] +x[3]*xi*xi*xi*y[1] + 3*x[3]*xi*xi*y[0] - 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] - 3*x[3]*xi*y[0] + x[3]*xi*y[1] + 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + eta*eta*eta*x[0]*y[1] - eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - eta*eta*eta*x[1]*y[0] + eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + eta*eta*eta*x[2]*y[0] - eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - eta*eta*eta*x[3]*y[1] + eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - eta*eta*x[0]*xi*xi*y[3] + eta*eta*x[0]*xi*y[2] - eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] + eta*eta*x[1]*xi*xi*y[2] - eta*eta*x[1]*xi*y[2] +eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] - eta*eta*x[1]*y[2] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - eta*eta*x[2]*xi*xi*y[1] + eta*eta*x[2]*xi*xi*y[3] - eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] + eta*eta*x[2]*y[1] - eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + eta*eta*x[3]*xi*xi*y[0] - eta*eta*x[3]*xi*xi*y[2] + eta*eta*x[3]*xi*y[0] - eta*eta*x[3]*xi*y[1] - eta*eta*x[3]*y[0] + eta*eta*x[3]*y[2] + eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] - eta*x[0]*y[1] + eta*x[0]*y[2] - eta*x[1]*xi*xi*y[0] + eta*x[1]*xi*xi*y[3]+ eta*x[1]*y[0] - eta*x[1]*y[3] + eta*x[2]*xi*xi*y[0] - eta*x[2]*xi*xi*y[3] - eta*x[2]*y[0] + eta*x[2]*y[3] - eta*x[3]*xi*xi*y[1] + eta*x[3]*xi*xi*y[2] + eta*x[3]*y[1] - eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] + x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(eta*eta*eta*x[0]*xi*xi*y[1] - eta*eta*eta*x[0]*xi*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] - eta*eta*eta*x[1]*xi*xi*y[0] + eta*eta*eta*x[1]*xi*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] + eta*eta*eta*x[2]*xi*xi*y[0] - eta*eta*eta*x[2]*xi*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] - eta*eta*eta*x[3]*xi*xi*y[1] + eta*eta*eta*x[3]*xi*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] + eta*eta*x[0]*xi*xi*xi*y[2] - eta*eta*x[0]*xi*xi*xi*y[3] + eta*eta*x[0]*xi*xi*y[1] - 2*eta*eta*x[0]*xi*xi*y[2] + eta*eta*x[0]*xi*xi*y[3] - eta*eta*x[0]*xi*y[2] + eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] - eta*eta*x[1]*xi*xi*xi*y[2] + eta*eta*x[1]*xi*xi*xi*y[3] - eta*eta*x[1]*xi*xi*y[0] -eta*eta*x[1]*xi*xi*y[2] + 2*eta*eta*x[1]*xi*xi*y[3] + eta*eta*x[1]*xi*y[2] - eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] - 2*eta*eta*x[1]*y[3] - eta*eta*x[2]*xi*xi*xi*y[0] +eta*eta*x[2]*xi*xi*xi*y[1] + 2*eta*eta*x[2]*xi*xi*y[0] + eta*eta*x[2]*xi*xi*y[1] - 3*eta*eta*x[2]*xi*xi*y[3] + eta*eta*x[2]*xi*y[0] - eta*eta*x[2]*xi*y[1] - 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] + 3*eta*eta*x[2]*y[3] + eta*eta*x[3]*xi*xi*xi*y[0] - eta*eta*x[3]*xi*xi*xi*y[1] - eta*eta*x[3]*xi*xi*y[0] - 2*eta*eta*x[3]*xi*xi*y[1] + 3*eta*eta*x[3]*xi*xi*y[2] - eta*eta*x[3]*xi*y[0]+ eta*eta*x[3]*xi*y[1] + eta*eta*x[3]*y[0] + 2*eta*eta*x[3]*y[1] - 3*eta*eta*x[3]*y[2] + 2*eta*x[0]*xi*xi*xi*y[2] - 2*eta*x[0]*xi*xi*xi*y[3] - eta*x[0]*xi*xi*y[1] - eta*x[0]*xi*xi*y[2] + 2*eta*x[0]*xi*xi*y[3] - 2*eta*x[0]*xi*y[2] + 2*eta*x[0]*xi*y[3] + eta*x[0]*y[1] + eta*x[0]*y[2] - 2*eta*x[0]*y[3] - 2*eta*x[1]*xi*xi*xi*y[2] + 2*eta*x[1]*xi*xi*xi*y[3] + eta*x[1]*xi*xi*y[0] - 2*eta*x[1]*xi*xi*y[2] + eta*x[1]*xi*xi*y[3] + 2*eta*x[1]*xi*y[2] - 2*eta*x[1]*xi*y[3] - eta*x[1]*y[0] + 2*eta*x[1]*y[2] - eta*x[1]*y[3] - 2*eta*x[2]*xi*xi*xi*y[0] + 2*eta*x[2]*xi*xi*xi*y[1] + eta*x[2]*xi*xi*y[0] + 2*eta*x[2]*xi*xi*y[1] - 3*eta*x[2]*xi*xi*y[3] + 2*eta*x[2]*xi*y[0] - 2*eta*x[2]*xi*y[1] - eta*x[2]*y[0] - 2*eta*x[2]*y[1] + 3*eta*x[2]*y[3] + 2*eta*x[3]*xi*xi*xi*y[0] - 2*eta*x[3]*xi*xi*xi*y[1] - 2*eta*x[3]*xi*xi*y[0] - eta*x[3]*xi*xi*y[1] + 3*eta*x[3]*xi*xi*y[2] - 2*eta*x[3]*xi*y[0] + 2*eta*x[3]*xi*y[1] + 2*eta*x[3]*y[0] + eta*x[3]*y[1] - 3*eta*x[3]*y[2] + x[0]*xi*xi*xi*y[2] - x[0]*xi*xi*xi*y[3] - x[0]*xi*xi*y[1] + x[0]*xi*xi*y[3] - x[0]*xi*y[2] + x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] - x[1]*xi*xi*xi*y[2] + x[1]*xi*xi*xi*y[3] + x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] - x[2]*xi*xi*xi*y[0] + x[2]*xi*xi*xi*y[1] + x[2]*xi*xi*y[1] - x[2]*xi*xi*y[3] + x[2]*xi*y[0] - x[2]*xi*y[1] - x[2]*y[1] +x[2]*y[3] + x[3]*xi*xi*xi*y[0] - x[3]*xi*xi*xi*y[1] - x[3]*xi*xi*y[0] + x[3]*xi*xi*y[2] - x[3]*xi*y[0] + x[3]*xi*y[1] + x[3]*y[0] - x[3]*y[2])/128
    ,
    t*(-eta*eta*eta*x[0]*xi*xi*y[1] + eta*eta*eta*x[0]*xi*xi*y[2] + 2*eta*eta*eta*x[0]*xi*y[1] - 2*eta*eta*eta*x[0]*xi*y[2] - eta*eta*eta*x[0]*y[1] + eta*eta*eta*x[0]*y[2] + eta*eta*eta*x[1]*xi*xi*y[0] - eta*eta*eta*x[1]*xi*xi*y[3] - 2*eta*eta*eta*x[1]*xi*y[0] + 2*eta*eta*eta*x[1]*xi*y[3] + eta*eta*eta*x[1]*y[0] - eta*eta*eta*x[1]*y[3] - eta*eta*eta*x[2]*xi*xi*y[0] + eta*eta*eta*x[2]*xi*xi*y[3] + 2*eta*eta*eta*x[2]*xi*y[0] - 2*eta*eta*eta*x[2]*xi*y[3] - eta*eta*eta*x[2]*y[0] + eta*eta*eta*x[2]*y[3] + eta*eta*eta*x[3]*xi*xi*y[1] - eta*eta*eta*x[3]*xi*xi*y[2] - 2*eta*eta*eta*x[3]*xi*y[1] + 2*eta*eta*eta*x[3]*xi*y[2] + eta*eta*eta*x[3]*y[1] - eta*eta*eta*x[3]*y[2] - eta*eta*x[0]*xi*xi*xi*y[2] + eta*eta*x[0]*xi*xi*xi*y[3] - eta*eta*x[0]*xi*xi*y[1] + 4*eta*eta*x[0]*xi*xi*y[2] - 3*eta*eta*x[0]*xi*xi*y[3] + 2*eta*eta*x[0]*xi*y[1] - 5*eta*eta*x[0]*xi*y[2] + 3*eta*eta*x[0]*xi*y[3] - eta*eta*x[0]*y[1] + 2*eta*eta*x[0]*y[2] - eta*eta*x[0]*y[3] + eta*eta*x[1]*xi*xi*xi*y[2] - eta*eta*x[1]*xi*xi*xi*y[3] + eta*eta*x[1]*xi*xi*y[0] - eta*eta*x[1]*xi*xi*y[2] - 2*eta*eta*x[1]*xi*y[0] - eta*eta*x[1]*xi*y[2] + 3*eta*eta*x[1]*xi*y[3] + eta*eta*x[1]*y[0] + eta*eta*x[1]*y[2] - 2*eta*eta*x[1]*y[3] + eta*eta*x[2]*xi*xi*xi*y[0] - eta*eta*x[2]*xi*xi*xi*y[1] - 4*eta*eta*x[2]*xi*xi*y[0] + eta*eta*x[2]*xi*xi*y[1] + 3*eta*eta*x[2]*xi*xi*y[3] + 5*eta*eta*x[2]*xi*y[0] + eta*eta*x[2]*xi*y[1] - 6*eta*eta*x[2]*xi*y[3] - 2*eta*eta*x[2]*y[0] - eta*eta*x[2]*y[1] + 3*eta*eta*x[2]*y[3] - eta*eta*x[3]*xi*xi*xi*y[0] + eta*eta*x[3]*xi*xi*xi*y[1] + 3*eta*eta*x[3]*xi*xi*y[0] - 3*eta*eta*x[3]*xi*xi*y[2] - 3*eta*eta*x[3]*xi*y[0] - 3*eta*eta*x[3]*xi*y[1] + 6*eta*eta*x[3]*xi*y[2] + eta*eta*x[3]*y[0] + 2*eta*eta*x[3]*y[1] - 3*eta*eta*x[3]*y[2] -2*eta*x[0]*xi*xi*xi*y[2] + 2*eta*x[0]*xi*xi*xi*y[3] + eta*x[0]*xi*xi*y[1] + 5*eta*x[0]*xi*xi*y[2] - 6*eta*x[0]*xi*xi*y[3] - 2*eta*x[0]*xi*y[1] - 4*eta*x[0]*xi*y[2] + 6*eta*x[0]*xi*y[3] + eta*x[0]*y[1] + eta*x[0]*y[2] - 2*eta*x[0]*y[3] + 2*eta*x[1]*xi*xi*xi*y[2] - 2*eta*x[1]*xi*xi*xi*y[3] - eta*x[1]*xi*xi*y[0] - 2*eta*x[1]*xi*xi*y[2] + 3*eta*x[1]*xi*xi*y[3] + 2*eta*x[1]*xi*y[0] -2*eta*x[1]*xi*y[2] - eta*x[1]*y[0] + 2*eta*x[1]*y[2] - eta*x[1]*y[3] + 2*eta*x[2]*xi*xi*xi*y[0] - 2*eta*x[2]*xi*xi*xi*y[1] - 5*eta*x[2]*xi*xi*y[0] + 2*eta*x[2]*xi*xi*y[1] + 3*eta*x[2]*xi*xi*y[3] + 4*eta*x[2]*xi*y[0] + 2*eta*x[2]*xi*y[1] - 6*eta*x[2]*xi*y[3] - eta*x[2]*y[0] - 2*eta*x[2]*y[1] + 3*eta*x[2]*y[3] - 2*eta*x[3]*xi*xi*xi*y[0] + 2*eta*x[3]*xi*xi*xi*y[1] + 6*eta*x[3]*xi*xi*y[0] - 3*eta*x[3]*xi*xi*y[1] - 3*eta*x[3]*xi*xi*y[2] - 6*eta*x[3]*xi*y[0] + 6*eta*x[3]*xi*y[2] + 2*eta*x[3]*y[0] + eta*x[3]*y[1] - 3*eta*x[3]*y[2] - x[0]*xi*xi*xi*y[2] + x[0]*xi*xi*xi*y[3] + x[0]*xi*xi*y[1] + 2*x[0]*xi*xi*y[2] - 3*x[0]*xi*xi*y[3] - 2*x[0]*xi*y[1] - x[0]*xi*y[2] + 3*x[0]*xi*y[3] + x[0]*y[1] - x[0]*y[3] + x[1]*xi*xi*xi*y[2] - x[1]*xi*xi*xi*y[3] - x[1]*xi*xi*y[0] - x[1]*xi*xi*y[2] + 2*x[1]*xi*xi*y[3] + 2*x[1]*xi*y[0] - x[1]*xi*y[2] - x[1]*xi*y[3] - x[1]*y[0] + x[1]*y[2] + x[2]*xi*xi*xi*y[0] - x[2]*xi*xi*xi*y[1] - 2*x[2]*xi*xi*y[0] + x[2]*xi*xi*y[1] + x[2]*xi*xi*y[3] + x[2]*xi*y[0] + x[2]*xi*y[1] - 2*x[2]*xi*y[3] - x[2]*y[1] + x[2]*y[3] - x[3]*xi*xi*xi*y[0] + x[3]*xi*xi*xi*y[1] + 3*x[3]*xi*xi*y[0] - 2*x[3]*xi*xi*y[1] - x[3]*xi*xi*y[2] - 3*x[3]*xi*y[0] + x[3]*xi*y[1] + 2*x[3]*xi*y[2] + x[3]*y[0] - x[3]*y[2])/128
    };

    return h2;
}

}


